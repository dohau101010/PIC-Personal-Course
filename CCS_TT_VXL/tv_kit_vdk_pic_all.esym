D G "__PCH__" 0 0 ""5.015""
D G "__DEVICE__" 0 0 ""
D G "__DATE__" 0 0 ""11-Sep-23""
D G "__TIME__" 0 0 ""21:41:15"" "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
c L "set_tris_a" 2 1 6 "FUNCTION"
v L "value" 2 45 "int8" `54 
f B "set_tris_a" 2 45 "void(int8 value)" `53 
v L "value" 2 46 "int8" `56 
f B "set_tris_b" 2 46 "void(int8 value)" `55 
v L "value" 2 47 "int8" `58 
f B "set_tris_c" 2 47 "void(int8 value)" `57 
v L "value" 2 48 "int8" `60 
f B "set_tris_d" 2 48 "void(int8 value)" `59 
v L "value" 2 49 "int8" `62 
f B "set_tris_e" 2 49 "void(int8 value)" `61 
f B "get_tris_a" 2 50 "int8()" `63 
f B "get_tris_b" 2 51 "int8()" `64 
f B "get_tris_c" 2 52 "int8()" `65 
f B "get_tris_d" 2 53 "int8()" `66 
f B "get_tris_e" 2 54 "int8()" `67 
v L "value" 2 55 "int8" `69 
f B "output_a" 2 55 "void(int8 value)" `68 
v L "value" 2 56 "int8" `71 
f B "output_b" 2 56 "void(int8 value)" `70 
v L "value" 2 57 "int8" `73 
f B "output_c" 2 57 "void(int8 value)" `72 
v L "value" 2 58 "int8" `75 
f B "output_d" 2 58 "void(int8 value)" `74 
v L "value" 2 59 "int8" `77 
f B "output_e" 2 59 "void(int8 value)" `76 
f B "input_a" 2 60 "int8()" `78 
f B "input_b" 2 61 "int8()" `79 
f B "input_c" 2 62 "int8()" `80 
f B "input_d" 2 63 "int8()" `81 
f B "input_e" 2 64 "int8()" `82 
f B "input_change_a" 2 65 "int8()" `83 
f B "input_change_b" 2 66 "int8()" `84 
f B "input_change_c" 2 67 "int8()" `85 
f B "input_change_d" 2 68 "int8()" `86 
f B "input_change_e" 2 69 "int8()" `87 
v L "pin" 2 70 "int16" `89 
f B "input" 2 70 "int8(int16 pin)" `88 
v L "pin" 2 71 "int16" `91 
f B "input_state" 2 71 "int8(int16 pin)" `90 
v L "pin" 2 72 "int16" `93 
f B "output_low" 2 72 "void(int16 pin)" `92 
v L "pin" 2 73 "int16" `95 
f B "output_high" 2 73 "void(int16 pin)" `94 
v L "pin" 2 74 "int16" `97 
f B "output_toggle" 2 74 "void(int16 pin)" `96 
v L "pin" 2 75 "int16" `99 
v L "level" 2 75 "int8" `100 
f B "output_bit" 2 75 "void(int16 pin,int8 level)" `98 
v L "pin" 2 76 "int16" `102 
f B "output_float" 2 76 "void(int16 pin)" `101 
v L "pin" 2 77 "int16" `104 
f B "output_drive" 2 77 "void(int16 pin)" `103  "Constants used to identify pins in the above are:"
d G "PIN_A0" 2 81 "31744"
d G "PIN_A1" 2 82 "31745"
d G "PIN_A2" 2 83 "31746"
d G "PIN_A3" 2 84 "31747"
d G "PIN_A4" 2 85 "31748"
d G "PIN_A5" 2 86 "31749"
d G "PIN_A6" 2 87 "31750"
d G "PIN_B0" 2 89 "31752"
d G "PIN_B1" 2 90 "31753"
d G "PIN_B2" 2 91 "31754"
d G "PIN_B3" 2 92 "31755"
d G "PIN_B4" 2 93 "31756"
d G "PIN_B5" 2 94 "31757"
d G "PIN_B6" 2 95 "31758"
d G "PIN_B7" 2 96 "31759"
d G "PIN_C0" 2 98 "31760"
d G "PIN_C1" 2 99 "31761"
d G "PIN_C2" 2 100 "31762"
d G "PIN_C4" 2 101 "31764"
d G "PIN_C5" 2 102 "31765"
d G "PIN_C6" 2 103 "31766"
d G "PIN_C7" 2 104 "31767"
d G "PIN_D0" 2 106 "31768"
d G "PIN_D1" 2 107 "31769"
d G "PIN_D2" 2 108 "31770"
d G "PIN_D3" 2 109 "31771"
d G "PIN_D4" 2 110 "31772"
d G "PIN_D5" 2 111 "31773"
d G "PIN_D6" 2 112 "31774"
d G "PIN_D7" 2 113 "31775"
d G "PIN_E0" 2 115 "31776"
d G "PIN_E1" 2 116 "31777"
d G "PIN_E2" 2 117 "31778"
d G "PIN_E3" 2 118 "31779"
d G "PIN_E7" 2 119 "31783"
d G "FALSE" 2 122 "0"
d G "TRUE" 2 123 "1"
d G "BYTE" 2 125 "int8"
d G "BOOLEAN" 2 126 "int1"
d G "getc" 2 128 "getch"
d G "fgetc" 2 129 "getch"
d G "getchar" 2 130 "getch"
d G "putc" 2 131 "putchar"
d G "fputc" 2 132 "putchar"
d G "fgets" 2 133 "gets"
d G "fputs" 2 134 "puts"
c L "output_drive" 2 1 3 "FUNCTION"
f B "restart_cause" 2 139 "int8()" `105 
f B "reset_cpu" 2 140 "void()" `106 
f B "sleep" 2 141 "void()" `107 
v L "type" 2 142 "int8" `109 
f G "sleep" 2 142 "void(int8 type)" `108  "Constants returned from RESTART_CAUSE() are:"
d G "WDT_TIMEOUT" 2 144 "7"
d G "MCLR_FROM_SLEEP" 2 145 "11"
d G "MCLR_FROM_RUN" 2 146 "15"
d G "NORMAL_POWER_UP" 2 147 "12"
d G "BROWNOUT_RESTART" 2 148 "14"
d G "WDT_FROM_SLEEP" 2 149 "3"
d G "RESET_INSTRUCTION" 2 150 "0"
d G "SLEEP_FULL" 2 153 "0" "Default"
d G "SLEEP_IDLE" 2 154 "1" "Clock and peripherals don't stop"
c L "sleep" 2 1 5 "FUNCTION"
v L "mode" 2 161 "int8" `111 
f B "setup_timer_0" 2 161 "void(int8 mode)" `110 
v L "value" 2 162 "int16" `113 
f B "set_timer0" 2 162 "void(int16 value)" `112 
f B "get_timer0" 2 163 "int16()" `114 
v L "mode" 2 164 "int8" `116 
v L "prescaler" 2 164 "int8" `117 
f B "setup_counters" 2 164 "void(int8 mode,int8 prescaler)" `115 
v L "value" 2 165 "int16" `119 
f B "set_rtcc" 2 165 "void(int16 value)" `118 
f B "get_rtcc" 2 166 "int16()" `120  "Constants used for SETUP_TIMER_0() are:"
d G "T0_INTERNAL" 2 168 "0"
d G "T0_EXT_L_TO_H" 2 169 "32"
d G "T0_EXT_H_TO_L" 2 170 "48"
d G "T0_DIV_1" 2 172 "8"
d G "T0_DIV_2" 2 173 "0"
d G "T0_DIV_4" 2 174 "1"
d G "T0_DIV_8" 2 175 "2"
d G "T0_DIV_16" 2 176 "3"
d G "T0_DIV_32" 2 177 "4"
d G "T0_DIV_64" 2 178 "5"
d G "T0_DIV_128" 2 179 "6"
d G "T0_DIV_256" 2 180 "7"
d G "T0_OFF" 2 182 "0x80"
d G "T0_8_BIT" 2 184 "0x40"
d G "RTCC_INTERNAL" 2 186 "0" "The following are provided for compatibility"
d G "RTCC_EXT_L_TO_H" 2 187 "32" "with older compiler versions"
d G "RTCC_EXT_H_TO_L" 2 188 "48"
d G "RTCC_DIV_1" 2 189 "8"
d G "RTCC_DIV_2" 2 190 "0"
d G "RTCC_DIV_4" 2 191 "1"
d G "RTCC_DIV_8" 2 192 "2"
d G "RTCC_DIV_16" 2 193 "3"
d G "RTCC_DIV_32" 2 194 "4"
d G "RTCC_DIV_64" 2 195 "5"
d G "RTCC_DIV_128" 2 196 "6"
d G "RTCC_DIV_256" 2 197 "7"
d G "RTCC_OFF" 2 198 "0x80"
d G "RTCC_8_BIT" 2 199 "0x40"
c L "get_rtcc" 2 1 8 "FUNCTION"
v L "mode" 2 210 "int16" `122 
f B "setup_wdt" 2 210 "void(int16 mode)" `121 
f B "restart_wdt" 2 211 "void()" `123  "Constants used for SETUP_WDT() are:"
d G "WDT_ON" 2 213 "0x100"
d G "WDT_OFF" 2 214 "0"
d G "WDT_4MS" 2 216 "0x300"
d G "WDT_8MS" 2 217 "0x500"
d G "WDT_16MS" 2 218 "0x700"
d G "WDT_32MS" 2 219 "0x900"
d G "WDT_64MS" 2 220 "0xB00"
d G "WDT_128MS" 2 221 "0xD00"
d G "WDT_256MS" 2 222 "0xF00"
d G "WDT_512MS" 2 223 "0x1100"
d G "WDT_1S" 2 224 "0x1300"
d G "WDT_2S" 2 225 "0x1500"
d G "WDT_4S" 2 226 "0x1700"
d G "WDT_8S" 2 227 "0x1900"
d G "WDT_16" 2 228 "0x1B00"
d G "WDT_32S" 2 229 "0x1D00"
d G "WDT_64S" 2 230 "0x1F00"
d G "WDT_128S" 2 231 "0x2100"
c L "restart_wdt" 2 1 3 "FUNCTION"
v L "mode" 2 237 "int16" `125 
f B "setup_timer_1" 2 237 "void(int16 mode)" `124 
f B "get_timer1" 2 238 "int16()" `126 
v L "value" 2 239 "int16" `128 
f B "set_timer1" 2 239 "void(int16 value)" `127  "Constants used for SETUP_TIMER_1() are:"
d G "T1_DISABLED" 2 242 "0"
d G "T1_INTERNAL" 2 243 "0x85"
d G "T1_EXTERNAL" 2 244 "0x87"
d G "T1_EXTERNAL_SYNC" 2 245 "0x83"
d G "T1_CLK_OUT" 2 247 "8"
d G "T1_DIV_BY_1" 2 249 "0"
d G "T1_DIV_BY_2" 2 250 "0x10"
d G "T1_DIV_BY_4" 2 251 "0x20"
d G "T1_DIV_BY_8" 2 252 "0x30"
c L "set_timer1" 2 1 3 "FUNCTION"
v L "mode" 2 257 "int8" `130 
v L "period" 2 257 "int8" `131 
v L "postscale" 2 257 "int8" `132 
f B "setup_timer_2" 2 257 "void(int8 mode,int8 period,int8 postscale)" `129 
f B "get_timer2" 2 258 "int8()" `133 
v L "value" 2 259 "int8" `135 
f B "set_timer2" 2 259 "void(int8 value)" `134  "Constants used for SETUP_TIMER_2() are:"
d G "T2_DISABLED" 2 261 "0"
d G "T2_DIV_BY_1" 2 262 "4"
d G "T2_DIV_BY_4" 2 263 "5"
d G "T2_DIV_BY_16" 2 264 "6"
c L "set_timer2" 2 1 3 "FUNCTION"
v L "mode" 2 269 "int16" `137 
f B "setup_timer_3" 2 269 "void(int16 mode)" `136 
f B "get_timer3" 2 270 "int16()" `138 
v L "value" 2 271 "int16" `140 
f B "set_timer3" 2 271 "void(int16 value)" `139  "Constants used for SETUP_TIMER_3() are:"
d G "T3_DISABLED" 2 274 "0"
d G "T3_INTERNAL" 2 275 "0x85"
d G "T3_EXTERNAL" 2 276 "0x87"
d G "T3_EXTERNAL_SYNC" 2 277 "0x83"
d G "T3_DIV_BY_1" 2 279 "0"
d G "T3_DIV_BY_2" 2 280 "0x10"
d G "T3_DIV_BY_4" 2 281 "0x20"
d G "T3_DIV_BY_8" 2 282 "0x30"
c L "set_timer3" 2 1 4 "FUNCTION"
v L "mode" 2 288 "int32" `142 
f B "setup_ccp1" 2 288 "void(int32 mode)" `141 
v L "mode" 2 289 "int32" `144 
v L "pwm" 2 289 "int8" `145 
f G "setup_ccp1" 2 289 "void(int32 mode,int8 pwm)" `143 
v L "value" 2 290 "int16" `147 
f B "set_pwm1_duty" 2 290 "void(int16 value)" `146  "Constants used for SETUP_CCPx() are:"
d G "CCP_OFF" 2 292 "0"
d G "CCP_CAPTURE_FE" 2 293 "4"
d G "CCP_CAPTURE_RE" 2 294 "5"
d G "CCP_CAPTURE_DIV_4" 2 295 "6"
d G "CCP_CAPTURE_DIV_16" 2 296 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 2 297 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 2 298 "9"
d G "CCP_COMPARE_INT" 2 299 "0xA"
d G "CCP_COMPARE_INT_AND_TOGGLE" 2 300 "0x2"
d G "CCP_COMPARE_RESET_TIMER" 2 301 "0xB"
d G "CCP_PWM" 2 302 "0xC"
d G "CCP_PWM_PLUS_1" 2 303 "0x1c"
d G "CCP_PWM_PLUS_2" 2 304 "0x2c"
d G "CCP_PWM_PLUS_3" 2 305 "0x3c"
c L "set_pwm1_duty" 2 1 1 "FUNCTION"
d G "T3_CCP1_TO_2" 2 311 "0x48"
d G "T3_CCP2" 2 312 "0x8"
d G "CCP_PWM_H_H" 2 315 "0x0c"
d G "CCP_PWM_H_L" 2 316 "0x0d"
d G "CCP_PWM_L_H" 2 317 "0x0e"
d G "CCP_PWM_L_L" 2 318 "0x0f"
d G "CCP_PWM_FULL_BRIDGE" 2 320 "0x40"
d G "CCP_PWM_FULL_BRIDGE_REV" 2 321 "0xC0"
d G "CCP_PWM_HALF_BRIDGE" 2 322 "0x80"
d G "CCP_SHUTDOWN_ON_COMP1" 2 324 "0x100000"
d G "CCP_SHUTDOWN_ON_COMP2" 2 325 "0x200000"
d G "CCP_SHUTDOWN_ON_COMP" 2 326 "0x300000"
d G "CCP_SHUTDOWN_ON_INT0" 2 327 "0x400000"
d G "CCP_SHUTDOWN_ON_COMP1_INT0" 2 328 "0x500000"
d G "CCP_SHUTDOWN_ON_COMP2_INT0" 2 329 "0x600000"
d G "CCP_SHUTDOWN_ON_COMP_INT0" 2 330 "0x700000"
d G "CCP_SHUTDOWN_AC_L" 2 332 "0x000000"
d G "CCP_SHUTDOWN_AC_H" 2 333 "0x040000"
d G "CCP_SHUTDOWN_AC_F" 2 334 "0x080000"
d G "CCP_SHUTDOWN_BD_L" 2 336 "0x000000"
d G "CCP_SHUTDOWN_BD_H" 2 337 "0x010000"
d G "CCP_SHUTDOWN_BD_F" 2 338 "0x020000"
d G "CCP_SHUTDOWN_RESTART" 2 340 "0x80000000"
c L "set_pwm1_duty" 2 1 1 "FUNCTION"
v L "mode" 2 344 "int32" `152 
f B "setup_ccp2" 2 344 "void(int32 mode)" `151 
v L "mode" 2 345 "int32" `154 
v L "pwm" 2 345 "int8" `155 
f G "setup_ccp2" 2 345 "void(int32 mode,int8 pwm)" `153 
v L "value" 2 346 "int16" `157 
f B "set_pwm2_duty" 2 346 "void(int16 value)" `156 
c L "set_pwm2_duty" 2 1 5 "FUNCTION"
v L "mode" 2 355 "int8" `162 
f B "setup_psp" 2 355 "void(int8 mode)" `161 
f B "psp_output_full" 2 356 "int8()" `163 
f B "psp_input_full" 2 357 "int8()" `164 
f B "psp_overflow" 2 358 "int8()" `165  "Constants used in SETUP_PSP() are:"
d G "PSP_ENABLED" 2 360 "0x10"
d G "PSP_DISABLED" 2 361 "0"
c L "psp_overflow" 2 1 3 "FUNCTION"
v L "mode" 2 368 "int32" `168 
f B "setup_spi" 2 368 "void(int32 mode)" `167 
v L "value" 2 369 "int8" `170 
f B "spi_write" 2 369 "void(int8 value)" `169 
f B "spi_read" 2 370 "int8()" `171 
v L "value" 2 371 "int8" `173 
f G "spi_read" 2 371 "int8(int8 value)" `172 
f B "spi_data_in" 2 372 "int8()" `174 
v L "mode" 2 373 "int32" `176 
f B "setup_spi2" 2 373 "void(int32 mode)" `175 
v L "value" 2 374 "int8" `178 
f B "spi_write2" 2 374 "void(int8 value)" `177 
f B "spi_read2" 2 375 "int8()" `179 
v L "value" 2 376 "int8" `181 
f G "spi_read2" 2 376 "int8(int8 value)" `180 
f B "spi_data_in2" 2 377 "int8()" `182  "Constants used in SETUP_SPI() are:"
d G "SPI_DISABLED" 2 379 "0x00"
d G "SPI_MASTER" 2 380 "0x20"
d G "SPI_SLAVE" 2 381 "0x24"
d G "SPI_SCK_IDLE_HIGH" 2 382 "0x10"
d G "SPI_SCK_IDLE_LOW" 2 383 "0x00"
d G "SPI_CLK_DIV_4" 2 384 "0x00"
d G "SPI_CLK_DIV_16" 2 385 "0x01"
d G "SPI_CLK_DIV_64" 2 386 "0x02"
d G "SPI_CLK_T2" 2 387 "0x03"
d G "SPI_SS_DISABLED" 2 388 "0x01"
d G "SPI_XMIT_L_TO_H" 2 390 "0x4000"
d G "SPI_XMIT_H_TO_L" 2 391 "0x0000"
d G "SPI_SAMPLE_AT_MIDDLE" 2 393 "0x0000"
d G "SPI_SAMPLE_AT_END" 2 394 "0x8000"
d G "SPI_L_TO_H" 2 397 "SPI_SCK_IDLE_LOW"
d G "SPI_H_TO_L" 2 398 "SPI_SCK_IDLE_HIGH"
c L "spi_data_in2" 2 1 2 "FUNCTION"
v L "baud" 2 402 "int32" `184 
f B "setup_uart" 2 402 "void(int32 baud)" `183 
v L "baud" 2 403 "int32" `186 
v L "stream" 2 403 "int8" `187 
f G "setup_uart" 2 403 "void(int32 baud,int8 stream)" `185 
v L "baud" 2 404 "int32" `189 
v L "stream" 2 404 "int8" `190 
v L "clock" 2 404 "int32" `191 
f G "setup_uart" 2 404 "void(int32 baud,int8 stream,int32 clock)" `188 
v L "baud" 2 405 "int32" `193 
f B "set_uart_speed" 2 405 "void(int32 baud)" `192 
v L "baud" 2 406 "int32" `195 
v L "stream" 2 406 "int8" `196 
f G "set_uart_speed" 2 406 "void(int32 baud,int8 stream)" `194 
v L "baud" 2 407 "int32" `198 
v L "stream" 2 407 "int8" `199 
v L "clock" 2 407 "int32" `200 
f G "set_uart_speed" 2 407 "void(int32 baud,int8 stream,int32 clock)" `197  "Constants used in setup_uart() are:"
d G "UART_ADDRESS" 2 411 "2"
d G "UART_DATA" 2 412 "4"
d G "UART_AUTODETECT" 2 413 "8"
d G "UART_AUTODETECT_NOWAIT" 2 414 "9"
d G "UART_WAKEUP_ON_RDA" 2 415 "10"
d G "UART_SEND_BREAK" 2 416 "13"
c L "set_uart_speed" 2 1 3 "FUNCTION"
v L "mode" 2 420 "int32" `202 
f B "setup_comparator" 2 420 "void(int32 mode)" `201  "Constants used in setup_comparator() are:"
d G "A0_A3_A1_A3" 2 422 "0xfff04"
d G "A0_A3_A1_A2_OUT_ON_A4_A5" 2 423 "0xfcf03"
d G "A0_A3_A1_A3_OUT_ON_A4_A5" 2 424 "0xbcf05"
d G "NC_NC_NC_NC" 2 425 "0x0ff07"
d G "A0_A3_A1_A2" 2 426 "0xfff02"
d G "A0_A3_NC_NC_OUT_ON_A4" 2 427 "0x9ef01"
d G "A0_VR_A1_VR" 2 428 "0x3ff06"
d G "A3_VR_A2_VR" 2 429 "0xcff0e"
d G "CP1_INVERT" 2 430 "0x0000010"
d G "CP2_INVERT" 2 431 "0x0000020"
c L "setup_comparator" 2 1 2 "FUNCTION"
v L "mode" 2 438 "int8" `206 
f B "setup_vref" 2 438 "void(int8 mode)" `205  "Constants used in setup_vref() are:"
d G "VREF_LOW" 2 440 "0xa0"
d G "VREF_HIGH" 2 441 "0x80"
d G "VREF_F5" 2 443 "0x40"
d G "VREF_COMP" 2 444 "0x10"
c L "setup_vref" 2 1 2 "FUNCTION"
v L "mode" 2 448 "int8" `208 
f B "setup_low_volt_detect" 2 448 "void(int8 mode)" `207  "Constants used in setup_low_volt_detect() are:"
d G "LVD_LVDIN" 2 450 "0x1F"
d G "LVD_45" 2 451 "0x1E"
d G "LVD_42" 2 452 "0x1D"
d G "LVD_40" 2 453 "0x1C"
d G "LVD_38" 2 454 "0x1B"
d G "LVD_36" 2 455 "0x1A"
d G "LVD_35" 2 456 "0x19"
d G "LVD_33" 2 457 "0x18"
d G "LVD_30" 2 458 "0x17"
d G "LVD_28" 2 459 "0x16"
d G "LVD_27" 2 460 "0x15"
d G "LVD_25" 2 461 "0x14"
d G "LVD_24" 2 462 "0x13"
d G "LVD_23" 2 463 "0x12"
d G "LVD_22" 2 464 "0x11"
d G "LVD_21" 2 465 "0x10"
d G "LVD_TRIGGER_BELOW" 2 467 "0"
d G "LVD_TRIGGER_ABOVE" 2 468 "0x80"
c L "setup_low_volt_detect" 2 1 2 "FUNCTION"
v L "mode" 2 473 "int16" `210 
f B "setup_oscillator" 2 473 "int8(int16 mode)" `209 
v L "mode" 2 474 "int16" `212 
v L "tune" 2 474 "sint8" `213 
f G "setup_oscillator" 2 474 "int8(int16 mode,sint8 tune)" `211  "Constants used in setup_oscillator() are:"
d G "OSC_31KHZ" 2 477 "0"
d G "OSC_125KHZ" 2 478 "0x10"
d G "OSC_250KHZ" 2 479 "0x20"
d G "OSC_500KHZ" 2 480 "0x30"
d G "OSC_1MHZ" 2 481 "0x40"
d G "OSC_2MHZ" 2 482 "0x50"
d G "OSC_4MHZ" 2 483 "0x60"
d G "OSC_8MHZ" 2 484 "0x70"
d G "OSC_TIMER1" 2 486 "1"
d G "OSC_INTRC" 2 487 "2"
d G "OSC_NORMAL" 2 488 "0"
d G "OSC_IDLE_MODE" 2 490 "0x80"
d G "OSC_31250" 2 491 "0x8000"
d G "OSC_STATE_STABLE" 2 495 "4"
d G "OSC_STATE_EXT_RUNNING" 2 496 "8"
c L "setup_oscillator" 2 1 4 "FUNCTION"
v L "mode" 2 503 "int16" `215 
f B "setup_adc" 2 503 "void(int16 mode)" `214 
f B "read_adc" 2 504 "int8()" `216 
v L "mode" 2 505 "int8" `218 
f G "read_adc" 2 505 "int8(int8 mode)" `217 
f G "read_adc" 2 506 "int16()" `219 
v L "mode" 2 507 "int8" `221 
f G "read_adc" 2 507 "int16(int8 mode)" `220 
f B "adc_done" 2 508 "int8()" `222  "Constants used for SETUP_ADC() are:"
d G "ADC_OFF" 2 510 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 2 511 "0x100"
d G "ADC_CLOCK_DIV_4" 2 512 "0x04"
d G "ADC_CLOCK_DIV_8" 2 513 "0x01"
d G "ADC_CLOCK_DIV_16" 2 514 "0x05"
d G "ADC_CLOCK_DIV_32" 2 515 "0x02"
d G "ADC_CLOCK_DIV_64" 2 516 "0x06"
d G "ADC_CLOCK_INTERNAL" 2 517 "0x07" "Internal 2-6us"
d G "ADC_TAD_MUL_0" 2 519 "0x00"
d G "ADC_TAD_MUL_2" 2 520 "0x08"
d G "ADC_TAD_MUL_4" 2 521 "0x10"
d G "ADC_TAD_MUL_6" 2 522 "0x18"
d G "ADC_TAD_MUL_8" 2 523 "0x20"
d G "ADC_TAD_MUL_12" 2 524 "0x28"
d G "ADC_TAD_MUL_16" 2 525 "0x30"
d G "ADC_TAD_MUL_20" 2 526 "0x38"
c L "adc_done" 2 1 1 "FUNCTION"
v L "pins" 2 529 "int8" `224 
f B "setup_adc_ports" 2 529 "void(int8 pins)" `223 
v L "pins" 2 530 "int8" `226 
v L "reference" 2 530 "int8" `227 
f G "setup_adc_ports" 2 530 "void(int8 pins,int8 reference)" `225 
v L "channel" 2 531 "int8" `229 
f B "set_adc_channel" 2 531 "void(int8 channel)" `228  "Constants used in SETUP_ADC_PORTS() are:"
d G "NO_ANALOGS" 2 534 "0x0F" "None"
d G "ALL_ANALOG" 2 535 "0x00" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3 B1 B4 B0"
d G "AN0_TO_AN11" 2 536 "0x03" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3 B1 B4"
d G "AN0_TO_AN10" 2 537 "0x04" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3 B1"
d G "AN0_TO_AN9" 2 538 "0x05" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3"
d G "AN0_TO_AN8" 2 539 "0x06" "A0 A1 A2 A3 A5 E0 E1 E2 B2"
d G "AN0_TO_AN7" 2 540 "0x07" "A0 A1 A2 A3 A5 E0 E1 E2"
d G "AN0_TO_AN6" 2 541 "0x08" "A0 A1 A2 A3 A5 E0 E1"
d G "AN0_TO_AN5" 2 542 "0x09" "A0 A1 A2 A3 A5 E0"
d G "AN0_TO_AN4" 2 543 "0x0A" "A0 A1 A2 A3 A5"
d G "AN0_TO_AN3" 2 544 "0x0B" "A0 A1 A2 A3"
d G "AN0_TO_AN2" 2 545 "0x0C" "A0 A1 A2"
d G "AN0_TO_AN1" 2 546 "0x0D" "A0 A1"
d G "AN0" 2 547 "0x0E" "A0"
d G "AN0_TO_AN11_ANALOG" 2 548 "0x03" "!old only provided for compatibility"
d G "AN0_TO_AN10_ANALOG" 2 549 "0x04" "!old only provided for compatibility"
d G "AN0_TO_AN9_ANALOG" 2 550 "0x05" "!old only provided for compatibility"
d G "AN0_TO_AN8_ANALOG" 2 551 "0x06" "!old only provided for compatibility"
d G "AN0_TO_AN7_ANALOG" 2 552 "0x07" "!old only provided for compatibility"
d G "AN0_TO_AN6_ANALOG" 2 553 "0x08" "!old only provided for compatibility"
d G "AN0_TO_AN5_ANALOG" 2 554 "0x09" "!old only provided for compatibility"
d G "AN0_TO_AN4_ANALOG" 2 555 "0x0A" "!old only provided for compatibility"
d G "AN0_TO_AN3_ANALOG" 2 556 "0x0B" "!old only provided for compatibility"
d G "AN0_TO_AN2_ANALOG" 2 557 "0x0C" "!old only provided for compatibility"
d G "AN0_TO_AN1_ANALOG" 2 558 "0x0D" "!old only provided for compatibility"
d G "AN0_ANALOG" 2 559 "0x0E" "!old only provided for compatibility"
d G "VSS_VDD" 2 562 "0x00" "Range 0-Vdd"
d G "VREF_VREF" 2 563 "0x30" "Range VrefL-VrefH"
d G "VREF_VDD" 2 564 "0x20" "Range VrefL-Vdd"
d G "VSS_VREF" 2 565 "0x10" "Range 0-VrefH"
d G "ADC_START_AND_READ" 2 568 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 2 569 "1"
d G "ADC_READ_ONLY" 2 570 "6"
c L "set_adc_channel" 2 1 3 "FUNCTION"
v L "x" 2 576 "sint8" `231 
f B "abs" 2 576 "sint8(sint8 x)" `230 
v L "x" 2 577 "sint16" `233 
f G "abs" 2 577 "sint16(sint16 x)" `232 
v L "x" 2 578 "sint32" `235 
f G "abs" 2 578 "sint32(sint32 x)" `234 
v L "x" 2 579 "float" `237 
f G "abs" 2 579 "float(float x)" `236 
v L "??65535" 2 580 "int8" `239 
v L "??65535" 2 580 "int8" `240 
f B "_mul" 2 580 "int16(int8 ,int8 )" `238 
v L "??65535" 2 581 "sint8" `239 
v L "??65535" 2 581 "sint8" `243 
f G "_mul" 2 581 "sint16(sint8 ,sint8 )" `241 
v L "??65535" 2 582 "int16" `239 
v L "??65535" 2 582 "int16" `246 
f G "_mul" 2 582 "int32(int16 ,int16 )" `244 
v L "??65535" 2 583 "sint16" `239 
v L "??65535" 2 583 "sint16" `249 
f G "_mul" 2 583 "sint32(sint16 ,sint16 )" `247  "Memory Manipulation Prototypes:"
v L "bank" 2 586 "int8" `251 
v L "offset" 2 586 "int8" `252 
f B "read_bank" 2 586 "int8(int8 bank,int8 offset)" `250 
v L "bank" 2 587 "int8" `254 
v L "offset" 2 587 "int8" `255 
v L "value" 2 587 "int8" `256 
f B "write_bank" 2 587 "void(int8 bank,int8 offset,int8 value)" `253 
v L "dest" 2 588 "*int8" `258 
v L "src" 2 588 "*int8" `259 
f B "strcpy" 2 588 "void(*int8 dest,*int8 src)" `257 
v L "dest" 2 589 "*int8" `261 
v L "src" 2 589 "*int8" `262 
f B "strcopy" 2 589 "void(*int8 dest,*int8 src)" `260 
v L "destination" 2 590 "*int8" `264 
v L "value" 2 590 "int8" `265 
v L "num" 2 590 "int16" `266 
f B "memset" 2 590 "void(*int8 destination,int8 value,int16 num)" `263 
v L "destination" 2 591 "*int8" `268 
v L "source" 2 591 "*int8" `269 
v L "num" 2 591 "int16" `270 
f B "memcpy" 2 591 "void(*int8 destination,*int8 source,int16 num)" `267  "String Prototypes:"
v L "cvalue" 2 594 "int8" `272 
f B "toupper" 2 594 "int8(int8 cvalue)" `271 
v L "cvalue" 2 595 "int8" `274 
f B "tolower" 2 595 "int8(int8 cvalue)" `273 
v L "string" 2 596 "*int8" `276 
v L "cstring" 2 596 "*int8" `277 
f B "sprintf" 2 596 "void(*int8 string,*int8 cstring,*int8 _VA_LIST)" `275  "Data Manipulators Prototypes:"
v L "address" 2 599 "*int8" `280 
v L "bytes" 2 599 "int8" `281 
v L "value" 2 599 "int8" `282 
f B "shift_left" 2 599 "int8(*int8 address,int8 bytes,int8 value)" `279 
v L "address" 2 600 "*int8" `284 
v L "bytes" 2 600 "int8" `285 
v L "value" 2 600 "int8" `286 
f B "shift_right" 2 600 "int8(*int8 address,int8 bytes,int8 value)" `283 
v L "address" 2 601 "*int8" `288 
v L "bytes" 2 601 "int8" `289 
f B "rotate_left" 2 601 "void(*int8 address,int8 bytes)" `287 
v L "address" 2 602 "*int8" `291 
v L "bytes" 2 602 "int8" `292 
f B "rotate_right" 2 602 "void(*int8 address,int8 bytes)" `290 
v L "value" 2 603 "int8" `294 
f B "swap" 2 603 "void(int8 value)" `293 
v L "var" 2 604 "int16" `296 
v L "offset" 2 604 "int8" `297 
f B "make8" 2 604 "int8(int16 var,int8 offset)" `295 
v L "var" 2 605 "int32" `296 
v L "offset" 2 605 "int8" `300 
f G "make8" 2 605 "int8(int32 var,int8 offset)" `298 
v L "varhigh" 2 606 "int8" `302 
v L "varlow" 2 606 "int8" `303 
f B "make16" 2 606 "int16(int8 varhigh,int8 varlow)" `301 
v L "var1" 2 607 "int16" `305 
f B "make32" 2 607 "int32(int16 var1)" `304 
v L "var1" 2 608 "int16" `307 
v L "var2" 2 608 "int16" `308 
f G "make32" 2 608 "int32(int16 var1,int16 var2)" `306 
v L "var1" 2 609 "int16" `307 
v L "var2" 2 609 "int8" `311 
f G "make32" 2 609 "int32(int16 var1,int8 var2)" `309 
v L "var1" 2 610 "int16" `313 
v L "var2" 2 610 "int8" `314 
v L "var3" 2 610 "int8" `315 
f G "make32" 2 610 "int32(int16 var1,int8 var2,int8 var3)" `312 
v L "var1" 2 611 "int8" `317 
f G "make32" 2 611 "int32(int8 var1)" `316 
v L "var1" 2 612 "int8" `307 
v L "var2" 2 612 "int8" `320 
f G "make32" 2 612 "int32(int8 var1,int8 var2)" `318 
v L "var1" 2 613 "int8" `313 
v L "var2" 2 613 "int8" `314 
v L "var3" 2 613 "int8" `324 
f G "make32" 2 613 "int32(int8 var1,int8 var2,int8 var3)" `321 
v L "var1" 2 614 "int8" `326 
v L "var2" 2 614 "int8" `327 
v L "var3" 2 614 "int8" `328 
v L "var4" 2 614 "int8" `329 
f G "make32" 2 614 "int32(int8 var1,int8 var2,int8 var3,int8 var4)" `325 
v L "var1" 2 615 "int8" `307 
v L "var2" 2 615 "int16" `332 
f G "make32" 2 615 "int32(int8 var1,int16 var2)" `330 
v L "var1" 2 616 "int8" `313 
v L "var2" 2 616 "int16" `314 
v L "var3" 2 616 "int8" `336 
f G "make32" 2 616 "int32(int8 var1,int16 var2,int8 var3)" `333 
v L "var1" 2 617 "int8" `313 
v L "var2" 2 617 "int8" `314 
v L "var3" 2 617 "int16" `340 
f G "make32" 2 617 "int32(int8 var1,int8 var2,int16 var3)" `337 
v L "var" 2 618 "int8" `342 
v L "bit" 2 618 "int8" `343 
f B "bit_set" 2 618 "void(int8 var,int8 bit)" `341 
v L "var" 2 619 "int16" `342 
v L "bit" 2 619 "int8" `346 
f G "bit_set" 2 619 "void(int16 var,int8 bit)" `344 
v L "var" 2 620 "int32" `342 
v L "bit" 2 620 "int8" `349 
f G "bit_set" 2 620 "void(int32 var,int8 bit)" `347 
v L "var" 2 621 "int8" `351 
v L "bit" 2 621 "int8" `352 
f B "bit_clear" 2 621 "void(int8 var,int8 bit)" `350 
v L "var" 2 622 "int16" `351 
v L "bit" 2 622 "int8" `355 
f G "bit_clear" 2 622 "void(int16 var,int8 bit)" `353 
v L "var" 2 623 "int32" `351 
v L "bit" 2 623 "int8" `358 
f G "bit_clear" 2 623 "void(int32 var,int8 bit)" `356 
v L "var" 2 624 "int8" `360 
v L "bit" 2 624 "int8" `361 
f B "bit_test" 2 624 "int8(int8 var,int8 bit)" `359 
v L "var" 2 625 "int16" `360 
v L "bit" 2 625 "int8" `364 
f G "bit_test" 2 625 "int8(int16 var,int8 bit)" `362 
v L "var" 2 626 "int32" `360 
v L "bit" 2 626 "int8" `367 
f G "bit_test" 2 626 "int8(int32 var,int8 bit)" `365  "#use delay() Prototypes:"
v L "count" 2 629 "int8" `369 
f B "delay_cycles" 2 629 "void(int8 count)" `368 
v L "time" 2 630 "int16" `371 
f B "delay_ms" 2 630 "void(int16 time)" `370 
v L "time" 2 631 "int16" `373 
f B "delay_us" 2 631 "void(int16 time)" `372  "#use rs232() Prototypes:"
v L "cdata" 2 634 "int8" `375 
f B "putchar" 2 634 "void(int8 cdata)" `374 
v L "cdata" 2 635 "int8" `377 
v L "stream" 2 635 "int8" `378 
f G "putchar" 2 635 "void(int8 cdata,int8 stream)" `376 
v L "string" 2 636 "*int8" `380 
f B "puts" 2 636 "void(*int8 string)" `379 
v L "string" 2 637 "*int8" `382 
v L "stream" 2 637 "int8" `383 
f G "puts" 2 637 "void(*int8 string,int8 stream)" `381 
f B "getch" 2 638 "int8()" `384 
v L "stream" 2 639 "int8" `386 
f G "getch" 2 639 "int8(int8 stream)" `385 
v L "string" 2 640 "*int8" `388 
f B "gets" 2 640 "void(*int8 string)" `387 
v L "string" 2 641 "*int8" `390 
v L "stream" 2 641 "int8" `391 
f G "gets" 2 641 "void(*int8 string,int8 stream)" `389 
f B "kbhit" 2 642 "int8()" `392 
v L "stream" 2 643 "int8" `394 
f G "kbhit" 2 643 "int8(int8 stream)" `393 
v L "string" 2 644 "*int8" `396 
f B "printf" 2 644 "void(*int8 string,*int8 _VA_LIST)" `395 
v L "stream" 2 645 "int8" `399 
v L "string" 2 645 "*int8" `400 
f B "fprintf" 2 645 "void(int8 stream,*int8 string,*int8 _VA_LIST)" `398 
f B "putc_send" 2 646 "void()" `402 
v L "stream" 2 647 "int8" `404 
f B "fputc_send" 2 647 "void(int8 stream)" `403 
f B "rcv_buffer_full" 2 648 "int8()" `405 
v L "stream" 2 649 "int8" `407 
f G "rcv_buffer_full" 2 649 "int8(int8 stream)" `406 
f B "rcv_buffer_bytes" 2 650 "int16()" `408 
v L "stream" 2 651 "int8" `410 
f G "rcv_buffer_bytes" 2 651 "int16(int8 stream)" `409 
f B "tx_buffer_full" 2 652 "int8()" `411 
v L "stream" 2 653 "int8" `413 
f G "tx_buffer_full" 2 653 "int8(int8 stream)" `412 
f B "tx_buffer_bytes" 2 654 "int16()" `414 
v L "stream" 2 655 "int8" `416 
f G "tx_buffer_bytes" 2 655 "int16(int8 stream)" `415  "#use i2c() Prototypes:"
f B "i2c_read" 2 658 "int8()" `417 
v L "stream" 2 659 "int8" `419 
f G "i2c_read" 2 659 "int8(int8 stream)" `418 
v L "stream" 2 660 "int8" `421 
v L "ack" 2 660 "int8" `422 
f G "i2c_read" 2 660 "int8(int8 stream,int8 ack)" `420 
v L "data" 2 661 "int8" `424 
f B "i2c_write" 2 661 "int8(int8 data)" `423 
v L "stream" 2 662 "int8" `426 
v L "data" 2 662 "int8" `427 
f G "i2c_write" 2 662 "int8(int8 stream,int8 data)" `425 
f B "i2c_start" 2 663 "void()" `428 
v L "stream" 2 664 "int8" `430 
f G "i2c_start" 2 664 "void(int8 stream)" `429 
v L "stream" 2 665 "int8" `432 
v L "restart" 2 665 "int8" `433 
f G "i2c_start" 2 665 "void(int8 stream,int8 restart)" `431 
f B "i2c_stop" 2 666 "void()" `434 
v L "stream" 2 667 "int8" `436 
f G "i2c_stop" 2 667 "void(int8 stream)" `435 
f B "i2c_isr_state" 2 668 "int8()" `437 
v L "addr" 2 669 "int8" `439 
f B "i2c_slaveaddr" 2 669 "void(int8 addr)" `438 
v L "stream" 2 670 "int8" `441 
v L "addr" 2 670 "int8" `442 
f G "i2c_slaveaddr" 2 670 "void(int8 stream,int8 addr)" `440 
f B "i2c_poll" 2 671 "int8()" `443 
v L "stream" 2 672 "int8" `445 
f G "i2c_poll" 2 672 "int8(int8 stream)" `444 
v L "baud" 2 673 "int32" `447 
f B "i2c_init" 2 673 "void(int32 baud)" `446 
v L "stream" 2 674 "int8" `449 
v L "baud" 2 674 "int32" `450 
f G "i2c_init" 2 674 "void(int8 stream,int32 baud)" `448  "#use spi() Prototypes:"
f B "spi_xfer" 2 677 "int8()" `451 
f G "spi_xfer" 2 678 "int16()" `452 
f G "spi_xfer" 2 679 "int32()" `453 
v L "data" 2 680 "int8" `455 
f G "spi_xfer" 2 680 "int8(int8 data)" `454 
v L "data" 2 681 "int16" `457 
f G "spi_xfer" 2 681 "int16(int16 data)" `456 
v L "data" 2 682 "int32" `459 
f G "spi_xfer" 2 682 "int32(int32 data)" `458 
v L "stream" 2 683 "int8" `461 
v L "data" 2 683 "int8" `462 
f G "spi_xfer" 2 683 "int8(int8 stream,int8 data)" `460 
v L "stream" 2 684 "int8" `461 
v L "data" 2 684 "int16" `465 
f G "spi_xfer" 2 684 "int16(int8 stream,int16 data)" `463 
v L "stream" 2 685 "int8" `461 
v L "data" 2 685 "int32" `468 
f G "spi_xfer" 2 685 "int32(int8 stream,int32 data)" `466 
v L "stream" 2 686 "int8" `470 
v L "data" 2 686 "int8" `471 
v L "bits" 2 686 "int8" `472 
f G "spi_xfer" 2 686 "int8(int8 stream,int8 data,int8 bits)" `469 
v L "stream" 2 687 "int8" `470 
v L "data" 2 687 "int16" `471 
v L "bits" 2 687 "int8" `476 
f G "spi_xfer" 2 687 "int16(int8 stream,int16 data,int8 bits)" `473 
v L "stream" 2 688 "int8" `470 
v L "data" 2 688 "int32" `471 
v L "bits" 2 688 "int8" `480 
f G "spi_xfer" 2 688 "int32(int8 stream,int32 data,int8 bits)" `477 
v L "baud" 2 689 "int32" `482 
f B "spi_init" 2 689 "void(int32 baud)" `481 
v L "stream" 2 690 "int8" `484 
v L "baud" 2 690 "int32" `485 
f G "spi_init" 2 690 "void(int8 stream,int32 baud)" `483 
v L "baud" 2 691 "int32" `487 
f B "spi_speed" 2 691 "void(int32 baud)" `486 
v L "stream" 2 692 "int8" `489 
v L "baud" 2 692 "int32" `490 
f G "spi_speed" 2 692 "void(int8 stream,int32 baud)" `488 
v L "stream" 2 693 "int8" `492 
v L "baud" 2 693 "int32" `493 
v L "clock" 2 693 "int32" `494 
f G "spi_speed" 2 693 "void(int8 stream,int32 baud,int32 clock)" `491 
v L "data" 2 694 "int8" `496 
f B "spi_prewrite" 2 694 "void(int8 data)" `495 
v L "data" 2 695 "int16" `498 
f G "spi_prewrite" 2 695 "void(int16 data)" `497 
v L "data" 2 696 "int32" `500 
f G "spi_prewrite" 2 696 "void(int32 data)" `499 
v L "??65535" 2 697 "int8" `502 
v L "data" 2 697 "int8" `503 
f G "spi_prewrite" 2 697 "void(int8 ,int8 data)" `501 
v L "??65535" 2 698 "int8" `502 
v L "data" 2 698 "int16" `506 
f G "spi_prewrite" 2 698 "void(int8 ,int16 data)" `504 
v L "??65535" 2 699 "int8" `502 
v L "data" 2 699 "int32" `509 
f G "spi_prewrite" 2 699 "void(int8 ,int32 data)" `507 
f B "spi_xfer_in" 2 700 "int8()" `510 
f G "spi_xfer_in" 2 701 "int16()" `511 
f G "spi_xfer_in" 2 702 "int32()" `512 
v L "bits" 2 703 "int8" `514 
f G "spi_xfer_in" 2 703 "int8(int8 bits)" `513 
v L "bits" 2 704 "int8" `516 
f G "spi_xfer_in" 2 704 "int16(int8 bits)" `515 
v L "bits" 2 705 "int8" `518 
f G "spi_xfer_in" 2 705 "int32(int8 bits)" `517 
v L "stream" 2 706 "int8" `520 
v L "bits" 2 706 "int8" `521 
f G "spi_xfer_in" 2 706 "int8(int8 stream,int8 bits)" `519 
v L "stream" 2 707 "int8" `520 
v L "bits" 2 707 "int8" `524 
f G "spi_xfer_in" 2 707 "int16(int8 stream,int8 bits)" `522 
v L "stream" 2 708 "int8" `520 
v L "bits" 2 708 "int8" `527 
f G "spi_xfer_in" 2 708 "int32(int8 stream,int8 bits)" `525  "#use rtos() Prototypes:"
f B "rtos_run" 2 711 "void()" `528 
f B "rtos_yield" 2 712 "void()" `529 
v L "task" 2 713 "int8" `531 
f B "rtos_enable" 2 713 "void(int8 task)" `530 
v L "task" 2 714 "int8" `533 
f B "rtos_disable" 2 714 "void(int8 task)" `532 
f B "rtos_terminate" 2 715 "void()" `534 
v L "flag" 2 716 "int8" `536 
f B "rtos_await" 2 716 "void(int8 flag)" `535 
v L "sem" 2 717 "int8" `538 
f B "rtos_wait" 2 717 "void(int8 sem)" `537 
v L "sem" 2 718 "int8" `540 
f B "rtos_signal" 2 718 "void(int8 sem)" `539 
v L "task" 2 719 "int8" `542 
v L "msg" 2 719 "int8" `543 
f B "rtos_msg_send" 2 719 "void(int8 task,int8 msg)" `541 
f B "rtos_msg_read" 2 720 "int8()" `544 
f B "rtos_msg_poll" 2 721 "int8()" `545 
v L "task" 2 722 "int8" `547 
f B "rtos_overrun" 2 722 "int8(int8 task)" `546 
v L "task" 2 723 "int8" `549 
v L "stat" 2 723 "*int8" `550 
f B "rtos_stats" 2 723 "void(int8 task,*int8 stat)" `548  "#use timer() Prototypes:"
f B "get_ticks" 2 726 "int8()" `551 
f G "get_ticks" 2 727 "int16()" `552 
f G "get_ticks" 2 728 "int32()" `553 
v L "stream" 2 729 "int8" `555 
f G "get_ticks" 2 729 "int8(int8 stream)" `554 
v L "stream" 2 730 "int8" `557 
f G "get_ticks" 2 730 "int16(int8 stream)" `556 
v L "stream" 2 731 "int8" `559 
f G "get_ticks" 2 731 "int32(int8 stream)" `558 
v L "value" 2 732 "int8" `561 
f B "set_ticks" 2 732 "void(int8 value)" `560 
v L "value" 2 733 "int16" `563 
f G "set_ticks" 2 733 "void(int16 value)" `562 
v L "value" 2 734 "int32" `565 
f G "set_ticks" 2 734 "void(int32 value)" `564 
v L "stream" 2 735 "int8" `567 
v L "value" 2 735 "int8" `568 
f G "set_ticks" 2 735 "void(int8 stream,int8 value)" `566 
v L "stream" 2 736 "int8" `567 
v L "value" 2 736 "int16" `571 
f G "set_ticks" 2 736 "void(int8 stream,int16 value)" `569 
v L "stream" 2 737 "int8" `567 
v L "value" 2 737 "int32" `574 
f G "set_ticks" 2 737 "void(int8 stream,int32 value)" `572  "#use pwm() Prototypes:"
f B "pwm_on" 2 740 "void()" `575 
v L "stream" 2 741 "int8" `577 
f G "pwm_on" 2 741 "void(int8 stream)" `576 
f B "pwm_off" 2 742 "void()" `578 
v L "stream" 2 743 "int8" `580 
f G "pwm_off" 2 743 "void(int8 stream)" `579 
v L "duty" 2 744 "int16" `582 
f B "pwm_set_duty" 2 744 "void(int16 duty)" `581 
v L "stream" 2 745 "int8" `584 
v L "duty" 2 745 "int16" `585 
f G "pwm_set_duty" 2 745 "void(int8 stream,int16 duty)" `583 
v L "percent" 2 746 "int16" `587 
f B "pwm_set_duty_percent" 2 746 "void(int16 percent)" `586 
v L "stream" 2 747 "int8" `589 
v L "percent" 2 747 "int16" `590 
f G "pwm_set_duty_percent" 2 747 "void(int8 stream,int16 percent)" `588 
v L "frequency" 2 748 "int32" `592 
f B "pwm_set_frequency" 2 748 "void(int32 frequency)" `591 
v L "stream" 2 749 "int8" `594 
v L "frequency" 2 749 "int32" `595 
f G "pwm_set_frequency" 2 749 "void(int8 stream,int32 frequency)" `593  "#use capture() Prototypes:"
f B "get_capture_time" 2 752 "int16()" `596 
v L "stream" 2 753 "int8" `598 
f G "get_capture_time" 2 753 "int16(int8 stream)" `597 
f B "get_capture_event" 2 754 "int8()" `599 
v L "stream" 2 755 "int8" `601 
f G "get_capture_event" 2 755 "int8(int8 stream)" `600  "Enviroment Prototypes:"
c L "get_capture_event" 2 1 2 "FUNCTION"
v L "address" 2 768 "int16" `603 
f B "goto_address" 2 768 "void(int16 address)" `602 
v L "label" 2 769 "int16" `605 
f B "label_address" 2 769 "int16(int16 label)" `604  "Program Memory Prototypes:"
v L "address" 2 772 "int16" `607 
v L "dataptr" 2 772 "*int8" `608 
v L "count" 2 772 "int16" `609 
f B "read_program_memory" 2 772 "void(int16 address,*int8 dataptr,int16 count)" `606 
v L "address" 2 773 "int16" `611 
f B "read_program_eeprom" 2 773 "int16(int16 address)" `610 
v L "address" 2 774 "int16" `613 
f B "erase_program_eeprom" 2 774 "void(int16 address)" `612 
v L "address" 2 775 "int16" `615 
v L "dataptr" 2 775 "*int8" `616 
v L "count" 2 775 "int16" `617 
f B "write_program_memory" 2 775 "void(int16 address,*int8 dataptr,int16 count)" `614 
v L "address" 2 776 "int16" `619 
v L "data" 2 776 "int16" `620 
f B "write_program_eeprom" 2 776 "void(int16 address,int16 data)" `618  "EEPROM Prototypes:"
t G "__EEADDRESS__" 2 781 "int16" `621 
v L "address" 2 786 "__EEADDRESS__" `623 
f B "read_eeprom" 2 786 "int8(__EEADDRESS__ address)" `622 
v L "address" 2 787 "__EEADDRESS__" `625 
v L "value" 2 787 "int8" `626 
f B "write_eeprom" 2 787 "void(__EEADDRESS__ address,int8 value)" `624  "INT"
c L "write_eeprom" 2 1 4 "FUNCTION"
v L "interrupt" 2 794 "int32" `628 
f B "enable_interrupts" 2 794 "void(int32 interrupt)" `627 
v L "interrupt" 2 795 "int32" `630 
f B "disable_interrupts" 2 795 "void(int32 interrupt)" `629 
v L "interrupt" 2 796 "int32" `632 
f B "clear_interrupt" 2 796 "void(int32 interrupt)" `631 
v L "interrupt" 2 797 "int32" `634 
f B "interrupt_active" 2 797 "int8(int32 interrupt)" `633 
v L "interrupt" 2 798 "int32" `636 
f B "interrupt_enabled" 2 798 "int8(int32 interrupt)" `635 
v L "source" 2 799 "int8" `638 
v L "edge" 2 799 "int8" `639 
f B "ext_int_edge" 2 799 "void(int8 source,int8 edge)" `637 
v L "address" 2 800 "int16" `641 
f B "jump_to_irs" 2 800 "void(int16 address)" `640  "Constants used in EXT_INT_EDGE() are:"
d G "L_TO_H" 2 802 "0x40"
d G "H_TO_L" 2 803 "0"
d G "GLOBAL" 2 805 "0xF2C0"
d G "PERIPH" 2 806 "0xF240"
d G "INT_RTCC" 2 807 "0x00F220"
d G "INT_TIMER0" 2 808 "0x00F220"
d G "INT_TIMER1" 2 809 "0x009D01"
d G "INT_TIMER2" 2 810 "0x009D02"
d G "INT_TIMER3" 2 811 "0x00A002"
d G "INT_EXT_L2H" 2 812 "0x5000F210"
d G "INT_EXT_H2L" 2 813 "0x6000F210"
d G "INT_EXT" 2 814 "0x00F210"
d G "INT_EXT1_L2H" 2 815 "0x5001F008"
d G "INT_EXT1_H2L" 2 816 "0x6001F008"
d G "INT_EXT1" 2 817 "0x00F008"
d G "INT_EXT2_L2H" 2 818 "0x5002F010"
d G "INT_EXT2_H2L" 2 819 "0x6002F010"
d G "INT_EXT2" 2 820 "0x00F010"
d G "INT_RB" 2 821 "0x00FFF208"
d G "INT_AD" 2 822 "0x009D40"
d G "INT_RDA" 2 823 "0x009D20"
d G "INT_TBE" 2 824 "0x009D10"
d G "INT_SSP" 2 825 "0x009D08"
d G "INT_CCP1" 2 826 "0x009D04"
d G "INT_CCP2" 2 827 "0x00A001"
d G "INT_BUSCOL" 2 828 "0x00A008"
d G "INT_LOWVOLT" 2 829 "0x00A004"
d G "INT_COMP" 2 830 "0x00A040"
d G "INT_EEPROM" 2 831 "0x00A010"
d G "INT_OSCF" 2 832 "0x00A080"
d G "INT_SPP" 2 833 "0x009D80"
d G "INT_USB" 2 834 "0x00A020"
D G "usi8" 1 17 "unsigned int8"
D G "usi16" 1 18 "unsigned int16"
D G "usi32" 1 19 "unsigned int32"
D G "si8" 1 20 "signed   int8"
D G "si16" 1 21 "signed   int16"
D G "si32" 1 22 "signed   int32"
D G "co_reset" 1 26 "true"
D G "no_reset" 1 27 "false"
D G "tt_on" 1 29 "1"
D G "tt_off" 1 30 "0"
D G "enable" 1 31 "1"
D G "disable" 1 32 "0"
D G "sang" 1 33 "1"
D G "tat" 1 34 "0"
D G "tat_l7d" 1 35 "0xff"
D G "cx_vn" 1 36 "true" "co xoa so 0 vo nghia"
D G "kx_vn" 1 37 "false" "khong xoa so 0 vo nghia"
D G "co_fill" 1 38 "true"
D G "no_fill" 1 39 "false"
D G "c_reset" 1 40 "1"
D G "k_reset" 1 41 "0"
D G "bt0" 1 46 "pin_b5"
D G "bt1" 1 50 "pin_b4"
D G "bt2" 1 54 "pin_b3"
D G "bt3" 1 58 "pin_b2"
D G "on" 1 61 "bt0" "dk led don, motor"
D G "off" 1 62 "bt1"
D G "inv" 1 63 "bt2"
D G "up" 1 65 "bt0" "dk led don"
D G "mod" 1 66 "bt1"
D G "dw" 1 67 "bt2"
D G "clr" 1 68 "bt3"
D G "stop" 1 70 "bt1"
D G "on1" 1 72 "bt0"
D G "off1" 1 73 "bt1"
D G "on2" 1 74 "bt2"
D G "off2" 1 75 "bt3"
D G "trig" 1 79 "pin_e1"
D G "echo" 1 80 "pin_a3"
D G "dht11" 1 84 "pin_d1"
D G "ssdo" 1 88 "pin_e2"
D G "ssck" 1 89 "pin_e0"
D G "rck_mtl" 1 91 "pin_d7"
D G "rck_4l7d" 1 92 "pin_d6"
D G "rck_8l7dq" 1 93 "pin_d5"
D G "rck_32led" 1 94 "pin_d4"
D G "rck_rlb" 1 95 "pin_d3"
D G "rck_lcd" 1 96 "pin_d2"
D G "g_all" 1 98 "pin_d0"
C L "jump_to_irs" 1 14 3 "FUNCTION"
V G "rbdc" 1 103 "int16" `654 
C L "jump_to_irs" 1 14 1 "FUNCTION"
C L "jump_to_irs" 1 14 1 "FUNCTION"
C L "jump_to_irs" 1 14 1 "FUNCTION"
C L "jump_to_irs" 1 14 1 "FUNCTION"
C L "jump_to_irs" 1 14 4 "FUNCTION"
V G "ma7doan" 1 121 "[16]" `667 
D G "maso0" 1 124 "0xc0"
C L "jump_to_irs" 1 14 3 "FUNCTION"
V L "x" 1 129 "int8" `671 
F G "xuat_1byte" 1 130 "void(int8 x)" `670 
V L "sb" 1 131 "int8" `672 
C L "xuat_1word" 1 14 3 "FUNCTION"
V L "w" 1 143 "int16" `675 
F G "xuat_1word" 1 144 "void(int16 w)" `674 
V L "b1" 1 145 "int8" `676 
V L "b0" 1 145 "int8" `677 
C L "xoa_tat_6module" 1 14 3 "FUNCTION"
F G "xoa_tat_6module" 1 155 "void()" `678 
C L "set_up_port" 1 14 3 "FUNCTION"
F G "set_up_port" 1 186 "void()" `679 
C L "xuat_1bit" 1 14 3 "FUNCTION"
V L "bx" 1 202 "int8" `681 
F G "xuat_1bit" 1 203 "int8(int8 bx)" `680 
D G "co_nhan" 3 8 "1"
D G "khong_nhan" 3 9 "0"
D G "c_ktnp" 3 10 "1" "co kiem tra nha phim"
D G "k_ktnp" 3 11 "0" "khong kiem tra nha phim"
V G "dl_btn" 3 18 "int16" `683 
D G "phim_on_c1" 3 23 "phim_bt0_c1"
D G "phim_run_c1" 3 24 "phim_bt0_c1"
D G "phim_up_c1" 3 25 "phim_bt0_c1"
V L "ktnp" 3 27 "int8" `685 
V L "dl" 3 27 "int16" `686 
F G "phim_bt0_c1" 3 28 "int8(int8 ktnp,int16 dl)" `684 
D G "phim_off_c1" 3 46 "phim_bt1_c1"
D G "phim_mode_c1" 3 47 "phim_bt1_c1"
D G "phim_stop_c1" 3 48 "phim_bt1_c1"
D G "phim_clr_c1" 3 49 "phim_bt1_c1"
V L "ktnp" 3 50 "int8" `688 
V L "dl" 3 50 "int16" `689 
F G "phim_bt1_c1" 3 51 "int8(int8 ktnp,int16 dl)" `687 
D G "phim_inv_c1" 3 70 "phim_bt2_c1"
D G "phim_dw_c1" 3 71 "phim_bt2_c1"
V L "ktnp" 3 73 "int8" `691 
V L "dl" 3 73 "int16" `692 
F G "phim_bt2_c1" 3 74 "int8(int8 ktnp,int16 dl)" `690 
D G "phim_ud_c1" 3 93 "phim_bt3_c1"
V L "ktnp" 3 96 "int8" `694 
V L "dl" 3 96 "int16" `695 
F G "phim_bt3_c1" 3 97 "int8(int8 ktnp,int16 dl)" `693 
D G "phim_on_c2" 3 127 "phim_bt0_c2"
D G "phim_run_c2" 3 128 "phim_bt0_c2"
D G "phim_up_c2" 3 129 "phim_bt0_c2"
V L "dl" 3 131 "int16" `697 
F G "phim_bt0_c2" 3 132 "int8(int16 dl)" `696 
D G "phim_off_c2" 3 149 "phim_bt1_c2"
D G "phim_stop_c2" 3 150 "phim_bt1_c2"
D G "phim_mode_c2" 3 151 "phim_bt1_c2"
D G "phim_clr_c2" 3 152 "phim_bt3_c2"
V L "dl" 3 154 "int16" `699 
F G "phim_bt1_c2" 3 155 "int8(int16 dl)" `698 
D G "phim_inv_c2" 3 172 "phim_bt2_c2"
D G "phim_dw_c2" 3 173 "phim_bt2_c2"
V L "dl" 3 175 "int16" `701 
F G "phim_bt2_c2" 3 176 "int8(int16 dl)" `700 
D G "phim_ud_c2" 3 193 "phim_bt3_c2"
V L "dl" 3 195 "int16" `703 
F G "phim_bt3_c2" 3 196 "int8(int16 dl)" `702 
C L "key_nhan" 4 1 3 "FUNCTION"
F G "key_nhan" 4 6 "int8()" `704 
V L "maphim" 4 7 "int8" `705 
V L "hang" 4 7 "int8" `706 
V L "cot" 4 7 "int8" `707 
C L "key_nhan" 4 1 1 "FUNCTION"
C L "key_nhan" 4 1 1 "FUNCTION"
C L "key_4x4_dw" 4 1 4 "FUNCTION"
F G "key_4x4_dw" 4 26 "int8()" `708 
V L "mp1" 4 27 "int8" `709 
V L "mp2" 4 27 "int8" `710 
C L "key_4x4_dw_c2" 4 1 4 "FUNCTION"
V L "dl" 4 46 "int8" `712 
F G "key_4x4_dw_c2" 4 47 "int8(int8 dl)" `711 
V L "mp" 4 48 "int8" `713 
C L "key_4x4_up" 4 1 3 "FUNCTION"
F G "key_4x4_up" 4 66 "int8()" `714 
V L "mp1" 4 67 "int8" `715 
V L "mp2" 4 67 "int8" `716 
C L "key_4x4_up" 4 1 1 "FUNCTION"
C L "key_4x4_up" 4 1 1 "FUNCTION"
C L "key_4x4_up" 4 1 1 "FUNCTION"
C L "key_4x4_up" 4 1 1 "FUNCTION"
D G "MATH_H" 5 30 ""
D G "PI" 5 35 "3.1415926535897932"
D G "SQRT2" 5 38 "1.4142135623730950"
C L "CEIL_FLOOR" 5 2 3 "FUNCTION"
V L "x" 5 45 "float" `718 
V L "n" 5 45 "int8" `719 
F G "CEIL_FLOOR" 5 46 "float(float x,int8 n)" `717 
V L "y" 5 47 "float" `720 
V L "res" 5 47 "float" `721 
V L "l" 5 48 "int16" `722 
V L "s" 5 49 "int1" `723 
C L "floor" 5 2 5 "FUNCTION"
V L "x" 5 207 "float" `738 
F G "floor" 5 208 "float(float x)" `737 
C L "ceil" 5 2 5 "FUNCTION"
V L "x" 5 233 "float" `740 
F G "ceil" 5 234 "float(float x)" `739 
D G "fabs" 5 259 "abs"
C L "fmod" 5 2 6 "FUNCTION"
V L "x" 5 271 "float" `742 
V L "y" 5 271 "float" `743 
F G "fmod" 5 272 "float(float x,float y)" `741 
V L "i" 5 273 "float" `744 
D G "LN2" 5 334 "0.6931471805599453"
D G "LN2_INV" 5 335 "1.4426950408889634073"
V G "pe" 5 337 "[6]" `748 
V L "x" 5 341 "float" `752 
F G "exp" 5 342 "float(float x)" `751 
V L "y" 5 343 "float" `753 
V L "res" 5 343 "float" `754 
V L "r" 5 343 "float" `755 
V L "n" 5 347 "sint8" `756 
V L "s" 5 348 "int1" `757 
C L "exp" 5 2 1 "FUNCTION"
V G "pl" 5 525 "[4]" `760 
V G "ql" 5 526 "[4]" `763 
C L "log" 5 2 3 "FUNCTION"
V L "x" 5 534 "float" `767 
F G "log" 5 535 "float(float x)" `766 
V L "y" 5 536 "float" `768 
V L "res" 5 536 "float" `769 
V L "r" 5 536 "float" `770 
V L "y2" 5 536 "float" `771 
V L "n" 5 540 "sint8" `772 
C L "log" 5 2 1 "FUNCTION"
D G "LN10" 5 758 "2.3025850929940456"
D G "LN10_INV" 5 759 "0.4342944819032518276"
C L "log10" 5 2 3 "FUNCTION"
V L "x" 5 767 "float" `774 
F G "log10" 5 768 "float(float x)" `773 
V L "r" 5 769 "float" `775 
C L "modf" 5 2 8 "FUNCTION"
V L "value" 5 808 "float" `777 
V L "iptr" 5 808 "*float" `778 
F G "modf" 5 809 "float(float value,*float iptr)" `776 
C L "pwr" 5 2 6 "FUNCTION"
V L "x" 5 836 "float" `780 
V L "y" 5 836 "float" `781 
F G "pwr" 5 837 "float(float x,float y)" `779 
C L "pow" 5 2 7 "FUNCTION"
V L "x" 5 899 "float" `783 
V L "y" 5 899 "float" `784 
F G "pow" 5 900 "float(float x,float y)" `782 
C L "sqrt" 5 2 5 "FUNCTION"
V L "x" 5 960 "float" `786 
F G "sqrt" 5 961 "float(float x)" `785 
V L "y" 5 962 "float" `787 
V L "res" 5 962 "float" `788 
V L "p" 5 966 "*int8" `789 
D G "PI_DIV_BY_TWO_INV" 5 1155 "0.63661977236758134"
D G "PI_DIV_BY_TWO" 5 1159 "1.5707963267948966"
D G "TWOBYPI" 5 1163 "0.6366197723675813"
C L "cos" 5 2 3 "FUNCTION"
V L "x" 5 1171 "float" `791 
F G "cos" 5 1172 "float(float x)" `790 
V L "y" 5 1173 "float" `792 
V L "t" 5 1173 "float" `793 
V L "t2" 5 1173 "float" `794 
V L "quad" 5 1174 "int8" `795 
V L "i" 5 1174 "int8" `796 
V L "frac" 5 1175 "float" `797 
V L "p" 5 1176 "float[5]" `798  "by the series definition for cosine"
C L "cos" 5 2 1 "FUNCTION"
C L "cos" 5 2 2 "FUNCTION"
C L "cos" 5 2 1 "FUNCTION"
C L "cos" 5 2 1 "FUNCTION"
C L "cos" 5 2 1 "FUNCTION"
C L "cos" 5 2 1 "FUNCTION"
C L "cos" 5 2 1 "FUNCTION"
C L "cos" 5 2 1 "FUNCTION"
C L "sin" 5 2 5 "FUNCTION"
V L "x" 5 1312 "float" `800 
F G "sin" 5 1313 "float(float x)" `799 
C L "tan" 5 2 5 "FUNCTION"
V L "x" 5 1338 "float" `802 
F G "tan" 5 1339 "float(float x)" `801 
V L "c" 5 1340 "float" `803 
V L "s" 5 1340 "float" `804 
V G "pas" 5 1378 "[3]" `805 
V G "qas" 5 1379 "[3]" `808 
V L "x" 5 1381 "float" `812 
V L "n" 5 1381 "int8" `813 
F G "ASIN_COS" 5 1382 "float(float x,int8 n)" `811 
V L "y" 5 1383 "float" `814 
V L "res" 5 1383 "float" `815 
V L "r" 5 1383 "float" `816 
V L "y2" 5 1383 "float" `817 
V L "s" 5 1384 "int1" `818 
C L "ASIN_COS" 5 2 1 "FUNCTION"
C L "ASIN_COS" 5 2 1 "FUNCTION"
C L "asin" 5 2 5 "FUNCTION"
V L "x" 5 1539 "float" `820 
F G "asin" 5 1540 "float(float x)" `819 
V L "r" 5 1541 "float" `821 
C L "acos" 5 2 5 "FUNCTION"
V L "x" 5 1573 "float" `823 
F G "acos" 5 1574 "float(float x)" `822 
V L "r" 5 1575 "float" `824 
V G "pat" 5 1601 "[4]" `825 
V G "qat" 5 1602 "[4]" `828 
C L "atan" 5 2 3 "FUNCTION"
V L "x" 5 1610 "float" `832 
F G "atan" 5 1611 "float(float x)" `831 
V L "y" 5 1612 "float" `833 
V L "res" 5 1612 "float" `834 
V L "r" 5 1612 "float" `835 
V L "s" 5 1613 "int1" `836 
V L "flag" 5 1613 "int1" `837 
C L "atan" 5 2 1 "FUNCTION"
C L "atan2" 5 2 7 "FUNCTION"
V L "y" 5 1753 "float" `839 
V L "x" 5 1753 "float" `840 
F G "atan2" 5 1754 "float(float y,float x)" `838 
V L "z" 5 1755 "float" `841 
V L "sign" 5 1756 "int1" `842 
V L "quad" 5 1757 "int8" `843 
C L "atan2" 5 2 1 "FUNCTION"
C L "atan2" 5 2 1 "FUNCTION"
C L "cosh" 5 2 7 "FUNCTION"
V L "x" 5 1975 "float" `846 
F G "cosh" 5 1976 "float(float x)" `845 
C L "sinh" 5 2 6 "FUNCTION"
V L "x" 5 2002 "float" `848 
F G "sinh" 5 2003 "float(float x)" `847 
C L "tanh" 5 2 6 "FUNCTION"
V L "x" 5 2032 "float" `850 
F G "tanh" 5 2033 "float(float x)" `849 
D G "LOG2" 5 2062 ".30102999566398119521"
D G "LOG2_INV" 5 2063 "3.32192809488736234787"
V L "x" 5 2064 "float" `852 
V L "exp" 5 2064 "*sint8" `853 
F G "frexp" 5 2065 "float(float x,*sint8 exp)" `851 
V L "res" 5 2066 "float" `854 
V L "sign" 5 2067 "int1" `855 
C L "ldexp" 5 2 6 "FUNCTION"
V L "value" 5 2209 "float" `857 
V L "exp" 5 2209 "sint8" `858 
F G "ldexp" 5 2210 "float(float value,sint8 exp)" `856 
C L "xuat_32led_don_4byte" 5 2 2 "FUNCTION"
C L "xuat_32led_don_4byte" 6 1 6 "FUNCTION"
V L "bld3" 6 7 "int8" `860 
V L "bld2" 6 7 "int8" `861 
V L "bld1" 6 7 "int8" `862 
V L "bld0" 6 7 "int8" `863 
F G "xuat_32led_don_4byte" 6 8 "void(int8 bld3,int8 bld2,int8 bld1,int8 bld0)" `859 
C L "xuat_32led_don_2word" 6 1 3 "FUNCTION"
V L "wld1" 6 18 "int16" `865 
V L "wld0" 6 18 "int16" `866 
F G "xuat_32led_don_2word" 6 19 "void(int16 wld1,int16 wld0)" `864 
V L "b3" 6 20 "int8" `867 
V L "b2" 6 20 "int8" `868 
V L "b1" 6 20 "int8" `869 
V L "b0" 6 20 "int8" `870 
C L "xuat_32led_don_1dw" 6 1 3 "FUNCTION"
V L "dwld" 6 28 "int32" `872 
F G "xuat_32led_don_1dw" 6 29 "void(int32 dwld)" `871 
V L "wd1" 6 30 "int16" `873 
V L "wd0" 6 30 "int16" `874 
C L "xuat_32led_don_1byte" 6 1 3 "FUNCTION"
V L "b0" 6 37 "int8" `876 
F G "xuat_32led_don_1byte" 6 38 "void(int8 b0)" `875 
V G "dl_4l7d" 7 8 "int8[4]" `877 
D G "ngan4" 7 9 "dl_4l7d[0]"
D G "tram4" 7 10 "dl_4l7d[1]"
D G "chuc4" 7 11 "dl_4l7d[2]"
D G "donvi4" 7 12 "dl_4l7d[3]"
D G "l7d_43" 7 14 "dl_4l7d[0]"
D G "l7d_42" 7 15 "dl_4l7d[1]"
D G "l7d_41" 7 16 "dl_4l7d[2]"
D G "l7d_40" 7 17 "dl_4l7d[3]"
C L "xuat_4led_7doan_4so" 7 1 3 "FUNCTION"
F G "xuat_4led_7doan_4so" 7 22 "void()" `878 
C L "md4l7d_giaima_2so_vitri_vn" 7 1 3 "FUNCTION"
V L "x" 7 34 "int8" `880 
V L "y" 7 34 "int8" `881 
V L "xvn" 7 34 "int8" `882 
F G "md4l7d_giaima_2so_vitri_vn" 7 35 "void(int8 x,int8 y,int8 xvn)" `879 
C L "md4l7d_giaima_3so_vitri_vn" 7 1 3 "FUNCTION"
V L "x" 7 46 "int16" `887 
V L "y" 7 46 "int8" `888 
V L "xvn" 7 46 "int8" `889 
F G "md4l7d_giaima_3so_vitri_vn" 7 47 "void(int16 x,int8 y,int8 xvn)" `886 
C L "md4l7d_giaima_4so_vitri_vn" 7 1 3 "FUNCTION"
V L "x" 7 63 "int16" `894 
V L "y" 7 63 "int8" `895 
V L "xvn" 7 63 "int8" `896 
F G "md4l7d_giaima_4so_vitri_vn" 7 64 "void(int16 x,int8 y,int8 xvn)" `893 
C L "md4l7d_gma_so_bcd_vitri_vn" 7 1 3 "FUNCTION"
V L "x" 7 85 "int8" `898 
V L "y" 7 85 "int8" `899 
V L "xvn" 7 85 "int8" `900 
F G "md4l7d_gma_so_bcd_vitri_vn" 7 86 "void(int8 x,int8 y,int8 xvn)" `897 
C L "xuat_4led_7doan_2so_4led" 7 1 3 "FUNCTION"
V L "bh" 7 97 "int8" `902 
V L "bl" 7 97 "int8" `903 
F G "xuat_4led_7doan_2so_4led" 7 98 "void(int8 bh,int8 bl)" `901 
V G "ma_quet" 8 7 "[9]" `904 
V L "ttq" 8 10 "int8" `908 
V L "mht" 8 10 "int8" `909 
F G "xuat_8led_7doan_quet" 8 11 "void(int8 ttq,int8 mht)" `907 
C L "tat_8led_7doan_quet" 8 1 3 "FUNCTION"
F G "tat_8led_7doan_quet" 8 22 "void()" `910 
V G "dl_8l7dq" 8 28 "int8[8]" `911 
F G "hien_thi_8led_7doan_quet" 8 31 "void()" `912 
V L "ttl" 8 32 "int8" `913 
C L "md8l7d_gma_2so_vitri_vn" 8 1 3 "FUNCTION"
V L "x" 8 43 "int8" `915 
V L "y" 8 43 "int8" `916 
V L "xvn" 8 43 "int8" `917 
F G "md8l7d_gma_2so_vitri_vn" 8 44 "void(int8 x,int8 y,int8 xvn)" `914 
C L "md8l7d_gma_3so_vitri_vn" 8 1 3 "FUNCTION"
V L "x" 8 55 "int16" `919 
V L "y" 8 55 "int8" `920 
V L "xvn" 8 55 "int8" `921 
F G "md8l7d_gma_3so_vitri_vn" 8 56 "void(int16 x,int8 y,int8 xvn)" `918 
C L "md8l7d_gma_4so_vitri_vn" 8 1 3 "FUNCTION"
V L "x" 8 72 "int16" `923 
V L "y" 8 72 "int8" `924 
V L "xvn" 8 72 "int8" `925 
F G "md8l7d_gma_4so_vitri_vn" 8 73 "void(int16 x,int8 y,int8 xvn)" `922 
C L "md8l7d_gma_so_bcd_vitri_vn" 8 1 3 "FUNCTION"
V L "x" 8 94 "int8" `927 
V L "y" 8 94 "int8" `928 
V L "xvn" 8 94 "int8" `929 
F G "md8l7d_gma_so_bcd_vitri_vn" 8 95 "void(int8 x,int8 y,int8 xvn)" `926 
C L "delay_quet_8led" 8 1 3 "FUNCTION"
V L "dl" 8 106 "int16" `931 
F G "delay_quet_8led" 8 107 "void(int16 dl)" `930 
V L "i" 8 108 "int16" `932 
D G "ds13_addr_wr" 9 7 "0xd0"
D G "ds13_addr_rd" 9 8 "0xd1"
V G "time_w" 9 15 "int8[9]" `933 
V G "time_r" 9 16 "int8[9]" `934 
D G "giay_ds" 9 17 "time_r[0]"
D G "phut_ds" 9 18 "time_r[1]"
D G "gio_ds" 9 19 "time_r[2]"
D G "thu_ds" 9 20 "time_r[3]"
D G "ngay_ds" 9 21 "time_r[4]"
D G "thang_ds" 9 22 "time_r[5]"
D G "nam_ds" 9 23 "time_r[6]"
D G "ma_qd" 9 25 "time_w[8]"
D G "ma_ds" 9 26 "time_r[8]"
C L "ds1307_cap_nhat_time" 9 1 3 "FUNCTION"
V L "sel" 9 30 "int8" `936 
F G "ds1307_cap_nhat_time" 9 31 "void(int8 sel)" `935 
V L "i" 9 32 "int8" `937 
C L "ds1307_doc_time" 9 1 3 "FUNCTION"
V L "j" 9 46 "int8" `939 
F G "ds1307_doc_time" 9 47 "void(int8 j)" `938 
V L "i" 9 48 "int8" `940 
C L "ds1307_doc_time" 9 1 1 "FUNCTION"
C L "ds1307_kiem_tra_ma" 9 1 3 "FUNCTION"
F G "ds1307_kiem_tra_ma" 9 64 "void()" `941 
D G "pcf_addr_wr" 9 77 "0x90"
D G "pcf_addr_rd" 9 78 "0x91"
D G "pcf_chan0" 9 80 "0x40"
D G "pcf_chan1" 9 81 "0x41"
D G "pcf_chan2" 9 82 "0x42"
D G "pcf_chan3" 9 83 "0x43"
C L "pcf_channel" 9 1 3 "FUNCTION"
V L "chan" 9 87 "int8" `943 
F G "pcf_channel" 9 88 "void(int8 chan)" `942 
C L "pcf_xuat_dac" 9 1 3 "FUNCTION"
V L "dac_out" 9 97 "int8" `945 
F G "pcf_xuat_dac" 9 98 "void(int8 dac_out)" `944 
C L "pcf_doc_adc" 9 1 3 "FUNCTION"
V L "ch" 9 108 "int8" `947 
F G "pcf_doc_adc" 9 109 "int8(int8 ch)" `946 
V L "kq" 9 110 "int8" `948 
C L "pcf_doc_chan" 9 1 3 "FUNCTION"
V L "chan" 9 122 "int8" `950 
V L "solan" 9 122 "int8" `951 
F G "pcf_doc_chan" 9 123 "int8(int8 chan,int8 solan)" `949 
V L "pcf" 9 124 "int16" `952 
V L "i" 9 125 "int8" `953 
V G "g_lcd" 10 8 "int8[4]" `954 
D G "glcd_ct" 10 9 "g_lcd[0]"
D G "glcd_dt" 10 10 "g_lcd[1]"
D G "lcd_ct" 10 11 "g_lcd[2]"
D G "lcd_dt" 10 12 "g_lcd[3]"
C L "xuat_glcd_lcd" 10 1 3 "FUNCTION"
F G "xuat_glcd_lcd" 10 17 "void()" `955 
C L "xuat_lcd" 10 1 3 "FUNCTION"
V L "lcd_ctr" 10 27 "int8" `957 
V L "lcd_dta" 10 27 "int8" `958 
F G "xuat_lcd" 10 28 "void(int8 lcd_ctr,int8 lcd_dta)" `956 
C L "xuat_glcd" 10 1 3 "FUNCTION"
V L "glcd_ctr" 10 36 "int8" `960 
V L "glcd_dta" 10 36 "int8" `961 
F G "xuat_glcd" 10 37 "void(int8 glcd_ctr,int8 glcd_dta)" `959 
V G "lcd_ctrl" 11 8 "int8" `962 
D G "lcd_clear_display" 11 17 "0x01"
D G "lcd_cursor_home" 11 18 "0x02"
D G "lcd_fs_function_set" 11 20 "0x20" "constant"
D G "fs_8bit" 11 21 "0x10"
D G "fs_2line" 11 22 "0x08"
D G "fs_5x10" 11 23 "0x04"
D G "lcd_dc_display_control" 11 25 "0x08" "constant"
D G "dc_display_on" 11 26 "0x04"
D G "dc_cursor_on" 11 27 "0x02"
D G "dc_blink_on" 11 28 "0x01"
D G "lcd_em_entry_mode" 11 30 "0x04" "constant"
D G "em_shift_inc" 11 31 "0x01"
D G "em_left" 11 32 "0x02"
D G "lcd_cd_cursor_display" 11 35 "0x10" "constant"
D G "cd_display_move" 11 36 "0x08"
D G "cd_move_right" 11 37 "0x04"
D G "lcd_shift_left" 11 39 "0x18"
D G "lcd_shift_right" 11 40 "0x1C"
D G "lcd_ddram_addr" 11 42 "0x80"
D G "lcd_cgram_addr" 11 43 "0x40"
C L "lcd_goto_xy" 11 1 1 "FUNCTION"
V L "x" 11 45 "int8" `968 
V L "y" 11 45 "int8" `969 
f G "lcd_goto_xy" 11 45 "void(int8 x,int8 y)" `967 
V L "db" 11 46 "int8" `971 
f G "lcd_xuat_8bit" 11 46 "void(int8 db)" `970 
V L "db" 11 47 "int8" `973 
f G "lcd_command" 11 47 "void(int8 db)" `972 
V L "db" 11 48 "int8" `975 
f G "lcd_data" 11 48 "void(int8 db)" `974 
V L "x" 11 49 "int8" `977 
V L "y" 11 49 "int8" `978 
V L "str" 11 49 "*int8" `979 
f G "lcd_puts" 11 49 "void(int8 x,int8 y,*int8 str)" `976 
f G "lcd_setup" 11 50 "void()" `980  "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
C L "lcd_setup" 11 1 2 "FUNCTION"
V L "db" 11 54 "int8" `982 
F G "lcd_xuat" 11 55 "void(int8 db)" `981 
C L "lcd_command" 11 1 3 "FUNCTION"
V L "db" 11 63 "int8" `984 
F G "lcd_command" 11 64 "void(int8 db)" `972 
C L "lcd_data" 11 1 3 "FUNCTION"
V L "db" 11 70 "int8" `984 
F G "lcd_data" 11 71 "void(int8 db)" `974 
C L "lcd_setup" 11 1 3 "FUNCTION"
F G "lcd_setup" 11 78 "void()" `980 
C L "lcd_goto_xy" 11 1 3 "FUNCTION"
V L "x" 11 93 "int8" `968 
V L "y" 11 93 "int8" `985 
F G "lcd_goto_xy" 11 94 "void(int8 x,int8 y)" `967 
V L "lcd_vitri" 11 95 "[1]" `983 
C L "lcd_goto_xy" 11 1 1 "FUNCTION"
C L "lcd_clear" 11 1 3 "FUNCTION"
F G "lcd_clear" 11 102 "void()" `986 
C L "lcd_back_light_on" 11 1 3 "FUNCTION"
F G "lcd_back_light_on" 11 110 "void()" `987 
C L "lcd_back_light_off" 11 1 3 "FUNCTION"
F G "lcd_back_light_off" 11 117 "void()" `988 
C L "lcd_puts" 11 1 3 "FUNCTION"
V L "x" 11 123 "int8" `977 
V L "y" 11 123 "int8" `978 
V L "str" 11 123 "*int8" `992 
F G "lcd_puts" 11 124 "void(int8 x,int8 y,*int8 str)" `976 
V G "lcd_so_to" 11 154 "[10][6]" `989 
V G "lcd_ma_8doan" 11 168 "[1]" `993 
C L "lcd_khoi_tao_cgram_so_to" 11 1 4 "FUNCTION"
F G "lcd_khoi_tao_cgram_so_to" 11 181 "void()" `996 
V L "i" 11 182 "int8" `997 
C L "lcd_hien_thi_so_to" 11 1 3 "FUNCTION"
V L "so" 11 190 "sint8" `999 
V L "x" 11 190 "int8" `1000 
V L "y" 11 190 "int8" `1001 
F G "lcd_hien_thi_so_to" 11 191 "void(sint8 so,int8 x,int8 y)" `998 
V L "i" 11 192 "int8" `1002 
C L "lcd_xoa_so_to" 11 1 3 "FUNCTION"
V L "x" 11 203 "sint8" `1007 
V L "y" 11 203 "int8" `1008 
F G "lcd_xoa_so_to" 11 204 "void(sint8 x,int8 y)" `1006 
V L "i" 11 205 "int8" `1009 
C L "lcd_hthi_byte" 11 1 3 "FUNCTION"
V L "sh" 11 216 "int8" `1011 
V L "x" 11 216 "int8" `1012 
V L "y" 11 216 "int8" `1013 
F G "lcd_hthi_byte" 11 217 "void(int8 sh,int8 x,int8 y)" `1010 
V L "bh" 11 218 "int8" `1014 
V L "bl" 11 218 "int8" `1015 
C L "lcd_gm_ht_2so_nho_xvn" 11 1 3 "FUNCTION"
V L "so" 11 229 "int16" `1017 
V L "x" 11 229 "int8" `1018 
V L "y" 11 229 "int8" `1019 
V L "xvn" 11 229 "int8" `1020 
F G "lcd_gm_ht_2so_nho_xvn" 11 230 "void(int16 so,int8 x,int8 y,int8 xvn)" `1016 
V L "ch" 11 231 "int8" `1021 
V L "dv" 11 231 "int8" `1022 
C L "lcd_gm_ht_3so_nho_xvn" 11 1 3 "FUNCTION"
V L "so" 11 244 "int16" `1025 
V L "x" 11 244 "int8" `1026 
V L "y" 11 244 "int8" `1027 
V L "xvn" 11 244 "int8" `1028 
F G "lcd_gm_ht_3so_nho_xvn" 11 245 "void(int16 so,int8 x,int8 y,int8 xvn)" `1024 
V L "tr" 11 246 "int8" `1029 
V L "ch" 11 246 "int8" `1030 
V L "dv" 11 246 "int8" `1031 
C L "lcd_gm_ht_4so_nho_xvn" 11 1 3 "FUNCTION"
V L "so" 11 266 "int16" `1035 
V L "x" 11 266 "int8" `1036 
V L "y" 11 266 "int8" `1037 
V L "xvn" 11 266 "int8" `1038 
F G "lcd_gm_ht_4so_nho_xvn" 11 267 "void(int16 so,int8 x,int8 y,int8 xvn)" `1034 
V L "ng" 11 268 "int8" `1039 
V L "tr" 11 268 "int8" `1040 
V L "ch" 11 268 "int8" `1041 
V L "dv" 11 268 "int8" `1042 
C L "lcd_gm_ht_5so_nho_xvn" 11 1 3 "FUNCTION"
V L "so" 11 292 "int16" `1047 
V L "x" 11 292 "int8" `1048 
V L "y" 11 292 "int8" `1049 
F G "lcd_gm_ht_5so_nho_xvn" 11 293 "void(int16 so,int8 x,int8 y)" `1046 
V L "cn" 11 294 "int8" `1050 
V L "ng" 11 294 "int8" `1051 
V L "tr" 11 294 "int8" `1052 
V L "ch" 11 294 "int8" `1053 
V L "dv" 11 294 "int8" `1054 
C L "lcd_gm_ht_2so_to_xvn" 11 1 3 "FUNCTION"
V L "so" 11 321 "int16" `1060 
V L "x" 11 321 "int8" `1061 
V L "y" 11 321 "int8" `1062 
V L "xvn" 11 321 "int8" `1063 
F G "lcd_gm_ht_2so_to_xvn" 11 322 "void(int16 so,int8 x,int8 y,int8 xvn)" `1059 
V L "ch" 11 323 "int8" `1064 
V L "dv" 11 323 "int8" `1065 
C L "lcd_gm_ht_3so_to_xvn" 11 1 3 "FUNCTION"
V L "so" 11 334 "int16" `1067 
V L "x" 11 334 "int8" `1068 
V L "y" 11 334 "int8" `1069 
V L "xvn" 11 334 "int8" `1070 
F G "lcd_gm_ht_3so_to_xvn" 11 335 "void(int16 so,int8 x,int8 y,int8 xvn)" `1066 
V L "tr" 11 336 "int8" `1071 
V L "ch" 11 336 "int8" `1072 
V L "dv" 11 336 "int8" `1073 
C L "lcd_gm_ht_4so_to_xvn" 11 1 3 "FUNCTION"
V L "so" 11 353 "int16" `1075 
V L "x" 11 353 "int8" `1076 
V L "y" 11 353 "int8" `1077 
V L "xvn" 11 353 "int8" `1078 
F G "lcd_gm_ht_4so_to_xvn" 11 354 "void(int16 so,int8 x,int8 y,int8 xvn)" `1074 
V L "ng" 11 355 "int8" `1079 
V L "tr" 11 355 "int8" `1080 
V L "ch" 11 355 "int8" `1081 
V L "dv" 11 355 "int8" `1082 
C L "lcd_gm_ht_5so_to_xvn" 11 1 3 "FUNCTION"
V L "so" 11 378 "int16" `1084 
V L "x" 11 378 "int8" `1085 
V L "y" 11 378 "int8" `1086 
V L "xvn" 11 378 "int8" `1087 
F G "lcd_gm_ht_5so_to_xvn" 11 379 "void(int16 so,int8 x,int8 y,int8 xvn)" `1083 
V L "cn" 11 380 "int8" `1088 
V L "ng" 11 380 "int8" `1089 
V L "tr" 11 380 "int8" `1090 
V L "ch" 11 380 "int8" `1091 
V L "dv" 11 380 "int8" `1092 
C L "lcd_hien_thi_2so_tp_nho" 11 1 3 "FUNCTION"
V L "tp" 11 410 "int8" `1094 
V L "x" 11 410 "int8" `1095 
V L "y" 11 410 "int8" `1096 
F G "lcd_hien_thi_2so_tp_nho" 11 411 "void(int8 tp,int8 x,int8 y)" `1093 
V L "tp" 11 418 "int16" `1100 
V L "x" 11 418 "int8" `1101 
V L "y" 11 418 "int8" `1102 
F G "lcd_hien_thi_3so_tp_nho" 11 419 "void(int16 tp,int8 x,int8 y)" `1099 
V L "tp" 11 427 "int8" `1105 
V L "x" 11 427 "int8" `1106 
V L "y" 11 427 "int8" `1107 
F G "lcd_hien_thi_1so_tp_nho" 11 428 "void(int8 tp,int8 x,int8 y)" `1104 
C L "lcd_hien_thi_1so_tp_nho" 11 1 1 "FUNCTION"
D G "dht11_pin_low" 12 5 "()    output_drive(dht11); output_low(dht11)"
D G "dht11_pin_high" 12 6 "()   output_drive(dht11); output_high(dht11)"
D G "dht11_pin_float" 12 7 "()  output_float(dht11)"
D G "dht11_pin_read" 12 8 "()   input_state(dht11)"
C L "dht11_start" 12 1 3 "FUNCTION"
F G "dht11_start" 12 13 "void()" `1109 
C L "dht11_check_response" 12 1 3 "FUNCTION"
F G "dht11_check_response" 12 24 "int8()" `1110 
V L "cnt" 12 25 "int8" `1111 
V L "tt" 12 26 "int1" `1112 
V L "tt1" 12 26 "int1" `1113 
C L "dht11_check_response" 12 1 1 "FUNCTION"
C L "dht11_check_response" 12 1 1 "FUNCTION"
C L "dht11_check_response" 12 1 1 "FUNCTION"
C L "dht11_read" 12 1 3 "FUNCTION"
F G "dht11_read" 12 45 "int8()" `1114 
V L "kq" 12 46 "int8" `1115 
V L "j" 12 46 "int8" `1116 
C L "dht11_read" 12 1 1 "FUNCTION"
C L "dht11_read" 12 1 1 "FUNCTION"
C L "hien_thi_no_dht11" 12 1 3 "FUNCTION"
F G "hien_thi_no_dht11" 12 64 "void()" `1117 
C L "hien_thi_sai_dht11" 12 1 3 "FUNCTION"
F G "hien_thi_sai_dht11" 12 72 "void()" `1119 
C L "xuat_buzzer_relay" 13 1 6 "FUNCTION"
F G "xuat_buzzer_relay" 13 9 "void()" `1121 
V L "rbdc1" 13 10 "int8" `1122 
V L "rbdc2" 13 10 "int8" `1123 
C L "buzzer_on" 13 1 3 "FUNCTION"
F G "buzzer_on" 13 20 "void()" `1124 
C L "buzzer_off" 13 1 3 "FUNCTION"
F G "buzzer_off" 13 28 "void()" `1125 
C L "buzzer_on_off" 13 1 3 "FUNCTION"
V L "dl" 13 35 "int16" `1127 
F G "buzzer_on_off" 13 36 "void(int16 dl)" `1126 
C L "relay_1_on" 13 1 3 "FUNCTION"
F G "relay_1_on" 13 47 "void()" `1128 
C L "relay_1_off" 13 1 3 "FUNCTION"
F G "relay_1_off" 13 55 "void()" `1129 
C L "relay_2_on" 13 1 3 "FUNCTION"
F G "relay_2_on" 13 63 "void()" `1130 
C L "relay_2_off" 13 1 3 "FUNCTION"
F G "relay_2_off" 13 71 "void()" `1131 
C L "relay_1_relay_2_on" 13 1 3 "FUNCTION"
F G "relay_1_relay_2_on" 13 79 "void()" `1132 
C L "relay_1_relay_2_off" 13 1 3 "FUNCTION"
F G "relay_1_relay_2_off" 13 87 "void()" `1133 
C L "triac_1_on" 13 1 3 "FUNCTION"
F G "triac_1_on" 13 95 "void()" `1134 
C L "triac_1_off" 13 1 3 "FUNCTION"
F G "triac_1_off" 13 103 "void()" `1135 
C L "triac_2_on" 13 1 3 "FUNCTION"
F G "triac_2_on" 13 111 "void()" `1136 
C L "triac_2_off" 13 1 3 "FUNCTION"
F G "triac_2_off" 13 119 "void()" `1137 
D G "chan_lm35a" 14 11 "0"
D G "chan_lm35b" 14 12 "1"
D G "chan_cbkc" 14 13 "2"
C L "h701_adc_read" 14 1 1 "FUNCTION"
V L "solan" 14 15 "int8" `1139 
V L "chan_i" 14 15 "int8" `1140 
F G "h701_adc_read" 14 16 "float(int8 solan,int8 chan_i)" `1138 
V L "kq_adc" 14 17 "float" `1141 
V L "i" 14 21 "int8" `1142 
V G "so_ng" 14 31 "int16" `1143 
V G "so_tp" 14 31 "int16" `1144 
V L "st" 14 32 "float" `1146 
F G "float_to_ng_2so_tp" 14 33 "void(float st)" `1145 
C L "float_to_ng_2so_tp" 14 1 1 "FUNCTION"
C L "float_to_ng_2so_tp" 14 1 1 "FUNCTION"
V G "nd_tren" 14 46 "int16" `1147 
V G "nd_duoi" 14 46 "int16" `1148 
V G "ttqn" 14 47 "int1" `1149 
V G "buz_ena" 14 47 "int1" `1150 
V L "nd1" 14 48 "int16" `1152 
F G "so_sanh_1nd_dk_buzzer" 14 49 "void(int16 nd1)" `1151 
V L "nd1" 14 65 "int16" `1154 
F G "so_sanh_1nd" 14 66 "void(int16 nd1)" `1153 
C L "so_sanh_1nd" 14 1 1 "FUNCTION"
C L "so_sanh_1nd" 14 1 1 "FUNCTION"
C L "so_sanh_1nd" 14 1 1 "FUNCTION"
V L "nd1" 14 83 "int16" `1156 
V L "nd2" 14 83 "int16" `1157 
F G "so_sanh_and_2nd" 14 84 "void(int16 nd1,int16 nd2)" `1155 
C L "so_sanh_and_2nd" 14 1 1 "FUNCTION"
C L "so_sanh_and_2nd" 14 1 1 "FUNCTION"
C L "so_sanh_and_2nd" 14 1 1 "FUNCTION"
V L "nd1" 14 101 "int16" `1159 
V L "nd2" 14 101 "int16" `1160 
F G "so_sanh_or_2nd" 14 102 "void(int16 nd1,int16 nd2)" `1158 
C L "so_sanh_or_2nd" 14 1 1 "FUNCTION"
C L "so_sanh_or_2nd" 14 1 1 "FUNCTION"
C L "so_sanh_or_2nd" 14 1 1 "FUNCTION"
C L "so_sanh_nd_dk_buzzer" 14 1 1 "FUNCTION"
V L "nd1" 14 120 "int16" `1162 
V L "nd2" 14 120 "int16" `1163 
V L "sel" 14 120 "int8" `1164 
F G "so_sanh_nd_dk_buzzer" 14 121 "void(int16 nd1,int16 nd2,int8 sel)" `1161 
D G "touch_pin" 15 8 "pin_a5"
D G "TOUCH_C" 16 36 ""
D G "TOUCH_PIN_LOW" 16 42 "()    output_drive(TOUCH_PIN); output_low(TOUCH_PIN)"
D G "TOUCH_PIN_HIGH" 16 43 "()    output_drive(TOUCH_PIN); output_high(TOUCH_PIN)"
D G "TOUCH_PIN_FLOAT" 16 44 "()  output_float(TOUCH_PIN)"
D G "TOUCH_PIN_READ" 16 45 "()      input_state(TOUCH_PIN)"
C L "touch_read_bit" 16 2 7 "FUNCTION"
f G "touch_read_bit" 16 59 "int8()" `1165  "BYTE touch_read_byte()"
C L "touch_read_bit" 16 2 3 "FUNCTION"
f G "touch_read_byte" 16 67 "int8()" `1166  "BOOLEAN touch_write_bit(int1 data)"
C L "touch_read_byte" 16 2 3 "FUNCTION"
V L "data" 16 75 "int8" `1168 
f G "touch_write_bit" 16 75 "int8(int8 data)" `1167  "BOOLEAN touch_write_byte(BYTE data)"
C L "touch_write_bit" 16 2 3 "FUNCTION"
V L "data" 16 83 "int8" `1170 
f G "touch_write_byte" 16 83 "int8(int8 data)" `1169  "BOOLEAN touch_present()"
C L "touch_write_byte" 16 2 3 "FUNCTION"
f G "touch_present" 16 91 "int8()" `1171  "void reset_pulse()"
C L "touch_present" 16 2 3 "FUNCTION"
f G "reset_pulse" 16 99 "void()" `1172  "////"
C L "reset_pulse" 16 2 6 "FUNCTION"
F G "touch_read_bit" 16 114 "int8()" `1165 
V L "data" 16 115 "int1" `1173 
C L "touch_read_byte" 16 2 4 "FUNCTION"
F G "touch_read_byte" 16 134 "int8()" `1166 
V L "i" 16 135 "int8" `1174 
V L "data" 16 135 "int8" `1175 
C L "touch_write_bit" 16 2 4 "FUNCTION"
V L "data" 16 149 "int8" `1177 
F G "touch_write_bit" 16 150 "int8(int8 data)" `1167 
C L "touch_write_byte" 16 2 4 "FUNCTION"
V L "data" 16 179 "int8" `1177 
F G "touch_write_byte" 16 180 "int8(int8 data)" `1169 
V L "i" 16 181 "int8" `1176 
C L "touch_present" 16 2 4 "FUNCTION"
F G "touch_present" 16 197 "int8()" `1171 
V L "present" 16 198 "int1" `1177 
C L "reset_pulse" 16 2 4 "FUNCTION"
F G "reset_pulse" 16 220 "void()" `1172 
D G "search_rom" 15 10 "0xf0"
D G "read_rom" 15 11 "0x33"
D G "match_rom" 15 12 "0x55"
D G "skip_rom" 15 13 "0xcc"
D G "alarm_search" 15 14 "0xec"
D G "read_scratchpad" 15 15 "0xbe"
D G "write_scratchpad" 15 16 "0x4e"
D G "copy_scratchpad" 15 17 "0x48"
D G "convert_t" 15 18 "0x44"
C L "ds18b20_khoi_tao_dpg" 15 20 1 "FUNCTION"
V L "dpg" 15 21 "int8" `1179 
F G "ds18b20_khoi_tao_dpg" 15 22 "void(int8 dpg)" `1178 
V L "res" 15 23 "[1]" `1180 
C L "ds18b20_khoi_tao_dpg" 15 20 1 "FUNCTION"
C L "ds18b20_no_ds18b" 15 20 3 "FUNCTION"
F G "ds18b20_no_ds18b" 15 39 "void()" `1183 
C L "ds18b20_khoi_tao" 15 20 3 "FUNCTION"
F G "ds18b20_khoi_tao" 15 47 "void()" `1185 
C L "ds18b20_khoi_tao" 15 20 1 "FUNCTION"
C L "ds18b20_read_temp" 15 20 3 "FUNCTION"
F G "ds18b20_read_temp" 15 63 "int16()" `1186 
V L "bl" 15 64 "int8" `1187 
V L "bh" 15 64 "int8" `1188 
V L "w" 15 65 "int16" `1189 
C L "ds18b20_doc_rom" 15 20 3 "FUNCTION"
V L "x" 15 80 "int8" `1191 
V L "y" 15 80 "int8" `1192 
F G "ds18b20_doc_rom" 15 81 "void(int8 x,int8 y)" `1190 
V L "rom_code" 15 82 "int8[8]" `1193 
V L "xh" 15 83 "int8" `1194 
V L "xl" 15 83 "int8" `1195 
V L "i" 15 84 "sint8" `1196 
D G "at24_addr_wr" 17 5 "0xa0"
D G "at24_addr_rd" 17 6 "0xa1"
C L "at24_reset" 17 1 3 "FUNCTION"
F G "at24_reset" 17 11 "void()" `1197 
C L "at24_khoi_tao_ghi" 17 1 3 "FUNCTION"
V L "addr" 17 18 "int16" `1199 
F G "at24_khoi_tao_ghi" 17 19 "void(int16 addr)" `1198 
C L "at24_khoi_tao_doc" 17 1 3 "FUNCTION"
V L "addr" 17 28 "int16" `1201 
F G "at24_khoi_tao_doc" 17 29 "void(int16 addr)" `1200 
C L "at24_ghi_1byte" 17 1 3 "FUNCTION"
V L "addr" 17 40 "int16" `1203 
V L "data_1byte" 17 40 "int8" `1204 
F G "at24_ghi_1byte" 17 41 "void(int16 addr,int8 data_1byte)" `1202 
C L "at24_doc_1byte" 17 1 3 "FUNCTION"
V L "addr" 17 52 "int16" `1206 
F G "at24_doc_1byte" 17 53 "int8(int16 addr)" `1205 
V L "data_1byte" 17 54 "int8" `1207 
V G "stepmotor_fs" 18 5 "int16[1]" `1208 
V G "stepmotor_hs" 18 6 "int16[1]" `1209 
V G "stepmotor_i" 18 8 "int8" `1210 
V G "stepmotor_tn" 18 9 "int1" `1211 
V G "stepmotor_fh" 18 10 "int1" `1212 
F G "step_motor_quay_thuan_fs" 18 13 "void()" `1213 
F G "step_motor_quay_nghich_fs" 18 21 "void()" `1214 
F G "step_motor_run_tn_fs" 18 29 "void()" `1215 
F G "step_motor_quay_thuan_hs" 18 35 "void()" `1216 
F G "step_motor_quay_nghich_hs" 18 43 "void()" `1217 
F G "step_motor_run_tn_hs" 18 51 "void()" `1218 
F G "step_motor_run_fs_hs" 18 57 "void()" `1219 
V G "dcmotor_tn" 19 1 "int1" `1220 
V G "dcmotor_onoff" 19 1 "int1" `1221 
C L "dc_motor_enable" 19 2 3 "FUNCTION"
F G "dc_motor_enable" 19 6 "void()" `1222 
F G "dc_motor_disable" 19 11 "void()" `1223 
F G "dc_motor_quay_thuan" 19 17 "void()" `1224 
F G "dc_motor_quay_nghich" 19 23 "void()" `1225 
F G "dc_motor_stop" 19 29 "void()" `1226 
F G "dc_motor_run" 19 35 "void()" `1227 
V G "pwm_duty" 19 46 "int16" `1228 
F G "dc_motor_ktao_ccp1_thuan" 19 48 "void()" `1229 
F G "dc_motor_ktao_ccp2_nghich" 19 55 "void()" `1230 
F G "dc_motor_ktao_ccpx" 19 62 "void()" `1231 
F G "dc_motor_set_pwmx_duty" 19 68 "void()" `1232 
F G "dc_motor_pwm_ccp1_ccp2_stop" 19 74 "void()" `1233 
C L "xuat_2byte" 20 1 6 "FUNCTION"
V L "v" 20 8 "int16" `1235 
F G "xuat_2byte" 20 9 "void(int16 v)" `1234 
V L "i" 20 10 "int8" `1236 
C L "xuat_matranled" 20 1 3 "FUNCTION"
V L "mahang" 20 23 "int16" `1239 
V L "macot1" 20 23 "int16" `1240 
V L "macot2" 20 24 "int16" `1241 
V L "macot3" 20 24 "int16" `1242 
F G "xuat_matranled" 20 25 "void(int16 mahang,int16 macot1,int16 macot2,int16 macot3)" `1238 
C L "hieu_chinh_4bit_cao" 20 1 11 "FUNCTION"
V L "xzy" 20 47 "int8" `1244 
F G "hieu_chinh_4bit_cao" 20 48 "int8(int8 xzy)" `1243 
V L "btg" 20 49 "int1" `1245 
V L "bx" 20 50 "int8" `1246 
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 1
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "scanf" 1 255
F B "fscanf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "_iosctrl" 1 2
F B "profileout" 1 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "interrupt_enabled" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "read_rom_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "strstr100" 2 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_d" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_d" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_d" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_d" 0 0
F B "get_tris_e" 0 0
F B "input_change_a" 0 0
F B "input_change_b" 0 0
F B "input_change_c" 0 0
F B "input_change_d" 0 0
F B "input_change_e" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 2
F B "setup_adc_ports" 1 2
F B "get_adc_ports" 0 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_vref" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_ccp1" 1 2
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 0
F B "set_pwm2_duty" 1 0
F B "setup_low_volt_detect" 1 0
F B "setup_oscillator" 0 2
F B "setup_psp" 1 0
F B "psp_output_full" 0 0
F B "psp_input_full" 0 0
F B "psp_overflow" 0 0
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 2
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "brownout_enable" 1 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "i2c_read" 0 2
F B "i2c_write" 1 2
F B "i2c_start" 0 2
F B "i2c_stop" 0 1
F B "i2c_isr_state" 0 1
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
F B "set_uart_speed" 1 3
F B "setup_uart" 1 3
